<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/printing" 
                    xmlns:dxgtl="clr-namespace:DevExpress.Xpf.Grid.TreeList;assembly=DevExpress.Xpf.Grid.v13.2"
                    xmlns:dxg="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v13.2"
                    xmlns:dxgl="clr-namespace:DevExpress.Xpf.Grid.LookUp;assembly=DevExpress.Xpf.Grid.v13.2"
                    xmlns:dxght="clr-namespace:DevExpress.Xpf.Grid.HitTest;assembly=DevExpress.Xpf.Grid.v13.2" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:dxcn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v13.2">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Grid.v13.2;component/Themes/Generic/PrintingTemplates.SL.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGrayBasedTheme.v13.2;component/Themes.SL/Constants.SL.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ResourceDictionary x:Key="EditorsDictionary" Source="/DevExpress.Xpf.Core.v13.2;component/Themes/generic.xaml" />

    <!--START Include: \LightGray\ColumnHeader.xaml -->


    <SolidColorBrush x:Key="GridColumnHeaderThemeKey_HeadersVerticalLineBrush" Color="White" />
    <SolidColorBrush x:Key="GridColumnHeaderThemeKey_HeaderCaptionForeground" Color="White" />
    <SolidColorBrush x:Key="GridColumnHeaderThemeKey_GroupHeaderCaptionForeground" Color="#FF6E6E6E" />
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <ControlTemplate x:Key="GridColumnHeaderThemeKey_SortArrowUpTemplate">
        <StackPanel VerticalAlignment="Center" UseLayoutRounding="True">
            <Border Margin="0,0,0,1" x:Name="SortBySummaryIndicator" Width="7" Height="1" Background="{TemplateBinding Foreground}" BorderBrush="{x:Null}" Visibility="{Binding IsSortedBySummary, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Path Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 685,527L 682,521L 681,521L 678,527L 685,527 Z" Width="7" Height="6" />
        </StackPanel>
    </ControlTemplate>
    <Style x:Key="GridColumnHeaderThemeKey_SortArrowUpStyle" TargetType="Control">
        <Setter Property="Width" Value="12" />
        <Setter Property="Margin" Value="2,0,-1,1" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style x:Key="GridColumnHeaderThemeKey_HeaderCustomizationAreaStyle" TargetType="ContentPresenter">
    </Style>

    <ControlTemplate x:Key="GridColumnHeaderThemeKey_SortArrowDownTemplate">
        <StackPanel VerticalAlignment="Center" UseLayoutRounding="True">
            <Path Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 678,521L 681,527L 682,527L 685,521L 678,521 Z" Width="7" Height="6" />
            <Border Margin="0,1,0,0" x:Name="SortBySummaryIndicator" Width="7" Height="1" Background="{TemplateBinding Foreground}" BorderBrush="{x:Null}" Visibility="{Binding IsSortedBySummary, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StackPanel>

    </ControlTemplate>
    <Style x:Key="GridColumnHeaderThemeKey_SortArrowDownStyle" TargetType="Control">
        <Setter Property="Width" Value="12" />
        <Setter Property="Margin" Value="2,0,-1,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style x:Key="GridColumnHeaderThemeKey_CaptionToArrowIndentBorderStyle" TargetType="Border">
        <Setter Property="Width" Value="15" />
    </Style>
    <ControlTemplate x:Key="GridColumnHeaderThemeKey_ControlTemplate" TargetType="dxgcore:GridColumnHeaderBase">
        <Grid x:Name="grid">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.5" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.5" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.0" Storyboard.TargetName="MousePressedElement" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HasRightSiblingStates">
                    <VisualState x:Name="HasSibling">
                        <Storyboard>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoSibling">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" dxcn:ValueSetter.Thickness="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ColumnPositionStates">
                    <VisualState x:Name="Standalone">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="grid" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Top" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                            <GradientStop Color="#FFD7D7D7" />
                                            <GradientStop Color="#FFF2F2F2" Offset="1" />
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="CornerRadius" dxcn:ValueSetter.CornerRadius="3" />
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF6E6E6E" Duration="0" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="Padding" dxcn:ValueSetter.Thickness="0" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" dxcn:ValueSetter.Thickness="0" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="BottomBorder" Storyboard.TargetProperty="Padding" dxcn:ValueSetter.Thickness="0" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                            <GradientStop Color="#c2c2c2" Offset="0" />
                                            <GradientStop Color="#dbdbdb" Offset="1" />
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimation Storyboard.TargetName="MousePressedElement" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FFc3c3c3" Duration="0" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="CornerRadius" dxcn:ValueSetter.CornerRadius="3" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="CornerRadius" dxcn:ValueSetter.CornerRadius="3" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="BottomBorder" Storyboard.TargetProperty="CornerRadius" dxcn:ValueSetter.CornerRadius="3" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="MousePressedElement" Storyboard.TargetProperty="CornerRadius" dxcn:ValueSetter.CornerRadius="3" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CaptionToArrowIndent" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" dxcn:ValueSetter.Thickness="0" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="Padding" dxcn:ValueSetter.Thickness="1,0,0,1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="BottomBorder" Storyboard.TargetProperty="BorderThickness" dxcn:ValueSetter.Thickness="0,0,1,0" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" dxcn:ValueSetter.Thickness="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HeaderPresenterTypeStates">
                    <VisualState x:Name="Headers" />
                    <VisualState x:Name="GroupPanel">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="outerBorder" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="PART_ColumnHeaderContent" Storyboard.TargetProperty="Margin" dxcn:ValueSetter.Thickness="2,0,2,0" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="PART_ColumnHeaderContent" Storyboard.TargetProperty="VerticalAlignment" dxcn:ValueSetter.VerticalAlignment="Top" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border x:Name="outerBorder" Visibility="Collapsed">
                <Border.Margin>
                    <Binding Path="(dxg:GridColumn.GroupIndex)">
                        <Binding.Converter>
                            <dxg:GroupPanelPaddingConverter Offset="5" />
                        </Binding.Converter>
                    </Binding>
                </Border.Margin>
            </Border>
            <ContentControl x:Name="PART_ColumnHeaderContent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False" Grid.Row="1">
                <ContentControl.Foreground>
                    <SolidColorBrush x:Name="Foreground" Color="White" />
                </ContentControl.Foreground>
                <Border x:Name="BottomBorder" Background="Red" Padding="0,0,0,5" BorderBrush="White">
                    <Border x:Name="Border" Background="White" BorderBrush="White" BorderThickness="0,0,1,0" Padding="0,0,0,1">
                        <Grid>
                            <Border x:Name="BackgroundBorder">
                                <Border.Background>
                                    <Binding Path="ColumnPosition" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:EnumToObjectConverter>
                                                <dx:EnumToObjectConverter.DefaultValue>
                                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                                        <GradientStop Color="OrangeRed" />
                                                        <GradientStop Color="Orange" Offset="1" />
                                                    </LinearGradientBrush>
                                                </dx:EnumToObjectConverter.DefaultValue>
                                                <dx:EnumToObjectConverter.Values>
                                                    <dx:EnumObjectProvider x:Key="Standalone">
                                                        <dx:EnumObjectProvider.Value>
                                                            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                                                <GradientStop Color="#FFD7D7D7" />
                                                                <GradientStop Color="#FFF2F2F2" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </dx:EnumObjectProvider.Value>
                                                    </dx:EnumObjectProvider>
                                                </dx:EnumToObjectConverter.Values>
                                            </dx:EnumToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Border.Background>
                            </Border>
                            <Border x:Name="MouseOverElement" Opacity="0">
                                <Border.Background>
                                    <Binding Path="ColumnPosition" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:EnumToObjectConverter>
                                                <dx:EnumToObjectConverter.DefaultValue>
                                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                                        <GradientStop Color="Coral" Offset="0" />
                                                        <GradientStop Color="Red" Offset="1" />
                                                    </LinearGradientBrush>
                                                </dx:EnumToObjectConverter.DefaultValue>
                                                <dx:EnumToObjectConverter.Values>
                                                    <dx:EnumObjectProvider x:Key="Standalone">
                                                        <dx:EnumObjectProvider.Value>
                                                            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                                                <GradientStop Color="#c2c2c2" Offset="0" />
                                                                <GradientStop Color="#dbdbdb" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </dx:EnumObjectProvider.Value>
                                                    </dx:EnumObjectProvider>
                                                </dx:EnumToObjectConverter.Values>
                                            </dx:EnumToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Border.Background>
                            </Border>
                            <Border x:Name="MousePressedElement" Background="#FF585858" Opacity="0" />
                            <Grid Margin="4,3" x:Name="PART_Content">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="PART_HeaderContainer" HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <dxg:HeaderContentControl x:Name="PART_HeaderPresenter" />
                                    <dxgcore:ColumnHeaderFilterControl Width="13" Grid.Column="1" VerticalAlignment="Top" IsTabStop="False" x:Name="PART_ColumnFilter" Foreground="{Binding Path=Foreground, ElementName=PART_ColumnHeaderContent}">
                                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                            <Binding Path="(dxg:GridColumn.HeaderPresenterType)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <dx:EnumToObjectConverter>
                                                        <dx:EnumToObjectConverter.DefaultValue>
                                                            <dxght:ColumnHeaderFilterButtonTableViewHitTestAcceptor />
                                                        </dx:EnumToObjectConverter.DefaultValue>
                                                        <dx:EnumToObjectConverter.Values>
                                                            <dxght:GroupPanelColumnHeaderFilterButtonTableViewHitTestAcceptor x:Key="GroupPanel" />
                                                        </dx:EnumToObjectConverter.Values>
                                                    </dx:EnumToObjectConverter>
                                                </Binding.Converter>
                                            </Binding>
                                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                                    </dxgcore:ColumnHeaderFilterControl>
                                </Grid>

                                <dx:XPFContentPresenter x:Name="PART_HeaderCustomizationArea" Grid.Column="1" Style="{StaticResource GridColumnHeaderThemeKey_HeaderCustomizationAreaStyle}" />
                                <Border x:Name="CaptionToArrowIndent" Grid.Column="2" Style="{StaticResource GridColumnHeaderThemeKey_CaptionToArrowIndentBorderStyle}" Visibility="Collapsed" />
                                <dxgcore:ColumnHeaderSortIndicatorControl IsTabStop="False" x:Name="PART_SortUpIndicator" Grid.Column="2" Style="{StaticResource GridColumnHeaderThemeKey_SortArrowUpStyle}" Template="{StaticResource GridColumnHeaderThemeKey_SortArrowUpTemplate}" Visibility="Collapsed" />
                                <dxgcore:ColumnHeaderSortIndicatorControl IsTabStop="False" x:Name="PART_SortDownIndicator" Grid.Column="2" Style="{StaticResource GridColumnHeaderThemeKey_SortArrowDownStyle}" Template="{StaticResource GridColumnHeaderThemeKey_SortArrowDownTemplate}" Visibility="Collapsed" />
                            </Grid>
                            <dxg:DesignTimeSelectionControl x:Name="PART_DesignTimeSelection" Visibility="Collapsed" IsTabStop="False" />
                        </Grid>
                    </Border>
                </Border>
            </ContentControl>
            <dxg:GridThumb Name="PART_HeaderGripper" HorizontalAlignment="Right" Cursor="SizeWE" Grid.Row="1" Visibility="Collapsed" />
        </Grid>
    </ControlTemplate>
    
    <ControlTemplate x:Key="GridColumnHeaderThemeKey_ColumnFilterTemplate" TargetType="ToggleButton">
        <Grid Margin="0,-2,0,0" VerticalAlignment="Stretch" Width="13" Height="13" Background="#00FF0000">
            <Path Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.6" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="9" x:Name="path" Data="F1 M 393,284.5C 393,283.671 391.209,283 389,283C 386.791,283 385,283.671 385,284.5C 385,284.676 385.096,284.843 385.245,285L 385.232,285L 388,288L 388,292L 390,291L 390,288L 392.772,285L 392.755,285C 392.904,284.843 393,284.676 393,284.5 Z M 389,285C 387.896,285 387,284.776 387,284.5C 387,284.224 387.896,284 389,284C 390.105,284 391,284.224 391,284.5C 391,284.776 390.105,285 389,285 Z">
            </Path>
            <Path Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Stretch="Fill" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="9" Data="F1 M 393,284.5C 393,283.671 391.209,283 389,283C 386.791,283 385,283.671 385,284.5C 385,284.676 385.096,284.843 385.245,285L 385.232,285L 388,288L 388,292L 390,291L 390,288L 392.772,285L 392.755,285C 392.904,284.843 393,284.676 393,284.5 Z M 389,285C 387.896,285 387,284.776 387,284.5C 387,284.224 387.896,284 389,284C 390.105,284 391,284.224 391,284.5C 391,284.776 390.105,285 389,285 Z" />
            <Path Visibility="{Binding IsPressed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.3" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="9" Data="F1 M 393,284.5C 393,283.671 391.209,283 389,283C 386.791,283 385,283.671 385,284.5C 385,284.676 385.096,284.843 385.245,285L 385.232,285L 388,288L 388,292L 390,291L 390,288L 392.772,285L 392.755,285C 392.904,284.843 393,284.676 393,284.5 Z M 389,285C 387.896,285 387,284.776 387,284.5C 387,284.224 387.896,284 389,284C 390.105,284 391,284.224 391,284.5C 391,284.776 390.105,285 389,285 Z" />
            <Path Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Stretch="Fill" Fill="{TemplateBinding Foreground}" Opacity="0.3" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="9" Data="F1 M 393,284.5C 393,283.671 391.209,283 389,283C 386.791,283 385,283.671 385,284.5C 385,284.676 385.096,284.843 385.245,285L 385.232,285L 388,288L 388,292L 390,291L 390,288L 392.772,285L 392.755,285C 392.904,284.843 393,284.676 393,284.5 Z M 389,285C 387.896,285 387,284.776 387,284.5C 387,284.224 387.896,284 389,284C 390.105,284 391,284.224 391,284.5C 391,284.776 390.105,285 389,285 Z" />
        </Grid>
    </ControlTemplate>
   <!--END Include: \LightGray\ColumnHeader.xaml -->
    <!--START Include: \Generic\ColumnHeader.xaml -->
    <dx:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dxg:GridColumnToGridColumnDataConverter x:Key="GridColumnToGridColumnDataConverter" />

    <DataTemplate x:Key="GridColumnHeaderThemeKey_ContentTemplate">
        <ContentPresenter Name="textBlock" Content="{Binding}" dxg:GridColumnHeader.GridColumn="{Binding Path=(dxg:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}">
            
        </ContentPresenter>
    </DataTemplate>
    <DataTemplate x:Key="GridColumnHeaderThemeKey_CustomizationAreaTemplate">
    </DataTemplate>
    <Style TargetType="dxg:GridThumb">


        <Setter Property="MinWidth" Value="8" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GridThumb">
                    <Grid Background="Transparent" dx:DragManager.IsStartDragPlace="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:ColumnEdgeTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="GridColumnHeaderThemeKey_FilterAreaTemplate" TargetType="dxe:PopupBaseEdit">

        <Grid>

            <ToggleButton Template="{StaticResource GridColumnHeaderThemeKey_ColumnFilterTemplate}" IsChecked="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" IsTabStop="False" Foreground="{Binding Path=Parent.Foreground, RelativeSource={RelativeSource TemplatedParent}}" />


            <dxe:EditorPopupBase x:Name="PART_Popup" Visibility="Collapsed" />
        </Grid>

    </ControlTemplate>


    <Style TargetType="dxg:DesignTimeSelectionControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="Red" IsHitTestVisible="false" Opacity="0.3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--END Include: \Generic\ColumnHeader.xaml -->
    <!--START Include: \LightGray\WaitIndicators.xaml -->

    <ControlTemplate x:Key="DefaultWaitIndicator" TargetType="ProgressBar">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="360" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Path x:Name="path" Stretch="Fill" StrokeThickness="1" StrokeLineJoin="Round" Stroke="{x:Null}" Data="F1 M 94.5,284C 94.7762,284 95,284.224 95,284.5L 95,287.5C 95,287.776 94.7762,288 94.5,288C 94.2239,288 94,287.776 94,287.5L 94,284.5C 94,284.224 94.2239,284 94.5,284 Z M 96.1919,283.341C 96.3952,283.154 96.7115,283.167 96.8984,283.37L 98.9287,285.579C 99.1156,285.782 99.1023,286.099 98.899,286.286C 98.6957,286.472 98.3794,286.459 98.1925,286.256L 96.1622,284.047C 95.9753,283.844 95.9886,283.528 96.1919,283.341 Z M 94.5,275C 94.7761,275 95,275.224 95,275.5L 95,278.5C 95,278.776 94.7761,279 94.5,279C 94.2238,279 94,278.776 94,278.5L 94,275.5C 94,275.224 94.2238,275 94.5,275 Z M 90.101,276.715C 90.3043,276.528 90.6206,276.541 90.8075,276.745L 92.8378,278.953C 93.0247,279.157 93.0114,279.473 92.8081,279.66C 92.6048,279.847 92.2885,279.833 92.1016,279.63L 90.0713,277.421C 89.8844,277.218 89.8978,276.902 90.101,276.715 Z M 92,281.513C 92,281.789 91.7762,282.013 91.5,282.013L 88.5,282.013C 88.2238,282.013 88,281.789 88,281.513C 88,281.236 88.2238,281.013 88.5,281.013L 91.5,281.013C 91.7762,281.013 92,281.236 92,281.513 Z M 92.668,283.201C 92.8549,283.405 92.8416,283.721 92.6383,283.908L 90.4297,285.938C 90.2264,286.125 89.9101,286.112 89.7232,285.908C 89.5363,285.705 89.5496,285.389 89.7529,285.202L 91.9615,283.171C 92.1648,282.985 92.4811,282.998 92.668,283.201 Z M 101,281.45C 101,281.698 100.799,281.9 100.55,281.9L 97.45,281.9C 97.2015,281.9 97,281.698 97,281.45C 97,281.201 97.2015,281 97.45,281L 100.55,281C 100.799,281 101,281.201 101,281.45 Z M 99.2514,277.064C 99.4195,277.247 99.4076,277.532 99.2246,277.7L 96.9424,279.798C 96.7595,279.966 96.4748,279.954 96.3066,279.771C 96.1384,279.588 96.1504,279.304 96.3333,279.135L 98.6155,277.037C 98.7985,276.869 99.0832,276.881 99.2514,277.064 Z" VerticalAlignment="Stretch" Fill="{TemplateBinding Background}">
            </Path>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="GridControlThemeKey_DefaultWaitIndicatorTemplate">
        <Grid x:Name="root" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Visibility">
                    <VisualState x:Name="Visible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" From="1" To="0" BeginTime="0:0:0.1" Duration="0:0:0.1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ProgressBar Width="16" Template="{StaticResource DefaultWaitIndicator}" IsIndeterminate="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="16" BorderBrush="{x:Null}" Foreground="{x:Null}" MinWidth="4" MinHeight="4">
                <ProgressBar.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <LinearGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterY="0.5" CenterX="0.5" />
                                <SkewTransform CenterY="0.5" CenterX="0.5" />
                                <RotateTransform CenterY="0.5" CenterX="0.5" />
                                <TranslateTransform />
                            </TransformGroup>
                        </LinearGradientBrush.RelativeTransform>
                        <GradientStop Color="#FFFFFFFF" Offset="0.25" />
                        <GradientStop Color="#19FFFFFF" Offset="0.6" />
                        <GradientStop Color="#19FFFFFF" Offset="1" />
                        <GradientStop Color="#FFFFFFFF" />
                    </LinearGradientBrush>
                </ProgressBar.Background>
            </ProgressBar>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="GridColumnHeaderThemeKey_IndicatorColumnHeaderTemplate">
        <ContentControl Margin="0,0,1,7" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
            <ContentControl.Visibility>
                <Binding Path="(dxg:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="Collapsed">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Default" Value="Visible" />
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </ContentControl.Visibility>
            <dx:WaitIndicator DeferedVisibility="{Binding Path=(dxg:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource GridControlThemeKey_DefaultWaitIndicatorTemplate}" />
        </ContentControl>
    </ControlTemplate>

    <!--END Include: \LightGray\WaitIndicators.xaml -->
    <!--START Include: \LightGray\ExpandButtons.xaml -->

    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True" />

    <ControlTemplate x:Key="GroupRowThemeKey_ExpandButtonTemplate" TargetType="dx:ToggleStateButton">
        <Grid Width="11" Height="11" x:Name="root">
            <Grid.Resources>
                <Storyboard FillBehavior="HoldEnd" x:Key="expand">
                    <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="ExpandButtonRotate" Storyboard.TargetProperty="Angle" To="90" />
                </Storyboard>
                <Storyboard FillBehavior="HoldEnd" x:Key="collapse">
                    <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="ExpandButtonRotate" Storyboard.TargetProperty="Angle" To="0" />
                </Storyboard>
            </Grid.Resources>
            <Ellipse Cursor="Hand" Fill="Red" Opacity="0" />
            <Path Stretch="Fill" RenderTransformOrigin="0.5, 0.5" Data="F1 M 692,518L 692,529L 702,524L 702,523L 692,518 Z" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Cursor="Hand" Fill="{TemplateBinding Foreground}" Width="8" Height="9">
                <Path.RenderTransform>
                    <RotateTransform x:Name="ExpandButtonRotate">
                        <!--<RotateTransform.Angle>
                            <Binding Path="IsChecked" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:BoolToObjectConverter TrueValue="90" FalseValue="0"/>
                                </Binding.Converter>
                            </Binding>
                        </RotateTransform.Angle>-->
                    </RotateTransform>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </ControlTemplate>
    <Style TargetType="dxg:BackgroundBorderControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:BackgroundBorderControl">
                    <Border Background="White" x:Name="PART_DetailButtonBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ContentPresenter dx:FrameworkElementHelper.IsVisible="{Binding Path=(dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="GroupRowThemeKey_ExpandDetailButtonTemplate" TargetType="dx:ToggleStateButton">
        <dxg:BackgroundBorderControl dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible="{Binding Path=(dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid Height="9" Width="9">
                <Path Stretch="Fill" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}" Fill="#FF6D6D6D" Data="F1 M 130.5,85C 132.985,85 135,87.0146 135,89.4999C 135,91.9852 132.985,93.9999 130.5,93.9999C 128.015,93.9999 126,91.9852 126,89.4999C 126,87.0146 128.015,85 130.5,85 Z M 128,89.9999L 130,89.9999L 130,91.9999L 131,91.9999L 131,89.9999L 133,89.9999L 133,88.9999L 131,88.9999L 131,86.9999L 130,86.9999L 130,88.9999L 128,88.9999L 128,89.9999 Z" />
                <Path Stretch="Fill" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Fill="#FF6D6D6D" Data="F1 M 141.5,85C 143.985,85 146,87.0146 146,89.4999C 146,91.9852 143.985,93.9999 141.5,93.9999C 139.015,93.9999 137,91.9852 137,89.4999C 137,87.0146 139.015,85 141.5,85 Z M 139,88.9999L 139,89.9999L 144,89.9999L 144,88.9999L 139,88.9999 Z" />
            </Grid>
        </dxg:BackgroundBorderControl>
    </ControlTemplate>

    <Style x:Key="GroupRowThemeKey_ExpandButtonStyle" TargetType="dx:ToggleStateButton">


        <Setter Property="Width" Value="11" />
        <Setter Property="Height" Value="11" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource GroupRowThemeKey_ExpandButtonTemplate}" />
    </Style>
    <Style TargetType="dxg:GridToggleStateButton">
        
        
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource GroupRowThemeKey_ExpandDetailButtonTemplate}" />
    </Style>
   <!--END Include: \LightGray\ExpandButtons.xaml -->
    <!--START Include: \LightGray\Scrollbars.xaml -->
    <!--
          removed Color x:Key =BaseColor#FFD2E1ED-->
    <!--
          removed Color x:Key =BaseColor#FFD3E2EE-->
    <!--
          removed Color x:Key =BaseColor#FFBAC6D5-->
    <!--
          removed Color x:Key =BaseColor#FFFBFBFB-->
    <!--
          removed Color x:Key =BaseColor#FFEBEDEF-->
    <!--
          removed Color x:Key =BaseColor#FFF0F0F0-->
    <!--
          removed Color x:Key =BaseColor#FFEFEFEF-->
    <Style x:Key="ScrollBarThemeKey_ScrollingCornerStyle" TargetType="Border">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="CornerRadius" Value="0,0,2,0" />
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush Center="0,0" GradientOrigin="0,0" RadiusX="1" RadiusY="1">
                    <GradientStop Color="#FFEFEFEF" Offset="1" />
                    <GradientStop Color="#FFDEDEDE" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!--END Include: \LightGray\Scrollbars.xaml -->
    <!--START Include: \LightGray\GridItemsContainer.xaml -->
    <!--
          removed Color x:Key =BaseColor#FFC1C1C1-->
    <!--
          removed Color x:Key =BaseColor#FF668CC4-->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FFFFFFFF-->
    <SolidColorBrush x:Key="OuterBorder1ColorBrush" Color="#FF668CC4" />
    <SolidColorBrush x:Key="OuterBorder2ColorBrush" Color="#FFC1C1C1" />
    <SolidColorBrush x:Key="InnerBorderColorBrush" Color="Transparent" />

    <!--END Include: \LightGray\GridItemsContainer.xaml -->
    <!--START Include: \LightGray\RowIndicator.xaml -->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FFB50606-->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FFEFF5FE-->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FF87A9D6-->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FFFFFFFF-->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FFDFEDFF-->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FF6F9DD9-->

    <dx:BoolInverseConverter x:Key="BoolInverseConverter" />
    <DataTemplate x:Key="RowIndicatorThemeKey_RowTemplate">
        <Border Background="Orange" BorderBrush="White" BorderThickness="0,0,1,0">
            <ContentPresenter Margin="0,-1,0,0" Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=View.RowIndicatorContentTemplate}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="RowIndicatorThemeKey_GroupRowTemplate">
        <Border Background="Orange" BorderBrush="White" BorderThickness="0,0,1,0">
            <ContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=View.RowIndicatorContentTemplate}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="RowIndicatorThemeKey_FocusedIconTemplate">
        <Path Stretch="Fill" Fill="White" Data="F1 M 382,1021L 386,1025L 382,1029L 382,1021 Z" Width="4" Height="8" Margin="1,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
    </DataTemplate>
    <DataTemplate x:Key="RowIndicatorThemeKey_ChangedIconTemplate">
        <Path Stretch="Fill" Fill="White" Data="F1 M 399,1021L 397,1021L 397,1022L 399,1022M 394,1022L 396,1022L 396,1021L 394,1021M 399,1028L 397,1028L 397,1029L 399,1029M 394,1029L 396,1029L 396,1028L 394,1028M 396,1028L 397,1028L 397,1022L 396,1022L 396,1028 Z" Width="5" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" />
    </DataTemplate>
    <DataTemplate x:Key="RowIndicatorThemeKey_NewItemRowIconTemplate">
        <Path Stretch="Fill" Fill="White" Data="F1 M 398,1050L 399,1048L 397,1049L 396.5,1046L 396,1049L 394,1048L 395,1050L 392,1050.5L 395,1051L 394,1053L 396,1052L 396.5,1055L 397,1052L 399,1053L 398,1051L 401,1050.5L 398,1050 Z" Width="9" Height="9" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,1,0,0" />
    </DataTemplate>
    <DataTemplate x:Key="RowIndicatorThemeKey_EditingIconTemplate">
        <Path Stretch="Fill" Fill="White" Data="F1 M 405,1027L 405,1029L 407,1029L 410,1026L 408,1024M 411,1021L 409,1023L 411,1025L 413,1023L 411,1021 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,0,0,0" />
    </DataTemplate>
    <DataTemplate x:Key="RowIndicatorThemeKey_ErrorIconTemplate">
        <Path Stretch="Fill" Fill="White" Data="F1 M 412,1040L 411,1041L 409.5,1039.5L 408,1041L 407,1040L 408.5,1038.5L 407,1037L 408,1036L 409.5,1037.5L 411,1036L 412,1037L 410.5,1038.5M 409.5,1034C 407.016,1034 405,1036.02 405,1038.5C 405,1040.98 407.016,1043 409.5,1043C 411.984,1043 414,1040.98 414,1038.5C 414,1036.02 411.984,1034 409.5,1034 Z" Width="9" Height="9" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,1,0,0" />
    </DataTemplate>
    <DataTemplate x:Key="RowIndicatorThemeKey_FocusedErrorIconTemplate">
        <Path Stretch="Fill" Fill="White" Data="F1 M 412,1040L 411,1041L 409.5,1039.5L 408,1041L 407,1040L 408.5,1038.5L 407,1037L 408,1036L 409.5,1037.5L 411,1036L 412,1037L 410.5,1038.5M 409.5,1034C 407.016,1034 405,1036.02 405,1038.5C 405,1040.98 407.016,1043 409.5,1043C 411.984,1043 414,1040.98 414,1038.5C 414,1036.02 411.984,1034 409.5,1034 Z" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center" Width="9" Height="9" />
    </DataTemplate>
    <DataTemplate x:Key="RowIndicatorThemeKey_AutoFilterRowIconTemplate">
        <Path Stretch="Fill" Fill="White" Data="F1 M 381,1035L 384,1038L 384,1042L 385,1042L 385,1038L 388,1035L 381,1035 Z" Width="7" Height="7" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,1,0,0" />
    </DataTemplate>
    <ControlTemplate x:Key="RowIndicatorThemeKey_RowPanelTemplate" TargetType="ContentControl">
        <Grid Background="Orange">
            <ContentPresenter />
            <Border Background="White" Width="1" HorizontalAlignment="Right" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="RowIndicatorThemeKey_RowOffsetControlTemplate" TargetType="dxg:RowOffset">
        <Border Background="#FFFFFFFF">
            <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="RowIndicatorThemeKey_GroupRowOffsetControlTemplate" TargetType="dxg:GroupRowOffset">
        <Border Background="#FFFFFFFF" />
    </ControlTemplate>
    <ControlTemplate x:Key="RowIndicatorThemeKey_RowOffsetTemplate" TargetType="ContentControl">
        <dxg:RowOffset AllowHorizontalLines="{Binding IsMasterRowExpanded, Converter={StaticResource BoolInverseConverter}}" AllowVerticalLines="False" BorderBrush="{TemplateBinding BorderBrush}" Offset="{Binding Path=View.LeftGroupAreaIndent}" RowLevel="{Binding Path=Level}" NextRowLevel="{Binding Path=NextRowLevel}" Template="{StaticResource RowIndicatorThemeKey_RowOffsetControlTemplate}" />
    </ControlTemplate>
    <ControlTemplate x:Key="RowIndicatorThemeKey_GroupRowOffsetTemplate" TargetType="ContentControl">
        <dxg:GroupRowOffset AllowVerticalLines="False" Offset="{Binding Path=View.LeftGroupAreaIndent}" RowLevel="{Binding Path=GroupLevel}" NextRowLevel="{Binding Path=NextRowLevel}" IsExpanded="{Binding Path=IsRowExpanded}" Template="{StaticResource RowIndicatorThemeKey_GroupRowOffsetControlTemplate}" />
    </ControlTemplate>
    <!--END Include: \LightGray\RowIndicator.xaml -->
    <!--START Include: \LightGray\Rows.xaml -->


    <dxg:DetailLevelToObjectConverter x:Key="DetailLevelToWidthConverter" DetailValue="1" NotDetailValue="0" />

    <ControlTemplate x:Key="GroupRowThemeKey_GroupRowControlContainerTemplate" TargetType="ContentControl">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="GroupRowThemeKey_GroupRowControlHeaderContentTemplate" TargetType="ContentControl">
        <Border x:Name="ContentBorder" BorderBrush="{StaticResource GroupGridRowBorderBrush}">

            <ContentPresenter />
        </Border>
    </ControlTemplate>
    <Style x:Key="GroupRowThemeKey_GroupRowPresenterStyle" TargetType="dxg:GroupGridRowPresenter">
    </Style>

    <ControlTemplate x:Key="GridRowThemeKey_RowControlContainerTemplate" TargetType="ContentControl">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.Background>
                <Binding Path="EvenRow">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter TrueValue="Red" FalseValue="Transparent"/>
                    </Binding.Converter>
                </Binding>
            </Grid.Background>
            <Grid>
                <Grid.Background>
                    <Binding Path="(dxe:BaseEdit.HasValidationError)">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="#FFFFD9D9" FalseValue="Transparent" />
                        </Binding.Converter>
                    </Binding>
                </Grid.Background>

                <Border x:Name="RowContentBorder" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.FadeSelectionOnLostFocus}" >

                    <Border.Background>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dx:EnumToObjectConverter>
                                    <dx:EnumToObjectConverter.Values>
                                        <dx:EnumObjectProvider x:Key="None" Value="Transparent" />
                                        <dx:EnumObjectProvider x:Key="Selected" Value="{StaticResource GridRowThemeKey_BorderSelectedBrush}" />
                                        <dx:EnumObjectProvider x:Key="Focused" Value="{StaticResource GridRowThemeKey_BorderFocusedBrush}" />
                                    </dx:EnumToObjectConverter.Values>
                                </dx:EnumToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Border.Background>

                </Border>
                <Border x:Name="RowBottomLine" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" Grid.Row="1">
                    <Border.BorderThickness>
                        <Binding Path="View.ShowHorizontalLines">
                            <Binding.Converter>
                                <dx:BoolToObjectConverter TrueValue="0,0,0,1" FalseValue="0" />
                            </Binding.Converter>
                        </Binding>
                    </Border.BorderThickness>
                </Border>
                <ContentPresenter Grid.RowSpan="2" />
            </Grid>
        </Grid>

    </ControlTemplate>
    <Style TargetType="dxg:FixedGroupsAdorner">
        <Setter Property="AdornerHeight" Value="20" />
        <Setter Property="AdornerBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#14000000" Offset="0.35" />
                    <GradientStop Color="#00000000" Offset="1" />
                    <GradientStop Color="#33000000" />
                    <GradientStop Color="#1E000000" Offset="0.15" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter IsHitTestVisible="false" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:RowIndicatorControl">
        <Setter Property="Foreground" Value="White" />
    </Style>
    <Style x:Key="GridRowThemeKey_DetailTotalSummaryIndentBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
    </Style>
    <Style TargetType="dxg:GridDetailExpandButtonContainer">
        <Setter Property="IsMasterRowExpanded" Value="{Binding IsMasterRowExpanded}" />
        <Setter Property="RowPosition" Value="{Binding RowPosition}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GridDetailExpandButtonContainer">
                    <dxg:GridDetailExpandButton Name="PART_ExpandButton" Command="{Binding View.Commands.ChangeMasterRowExpanded}" CommandParameter="{Binding Path=RowHandle.Value}" IsChecked="{Binding Path=IsRowExpanded, Mode=OneWay}" dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible="{Binding Path=(dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:DetailRowsIndentControl">
        <Setter Property="dxg:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding Path=(dxg:DetailSummaryControlBase.SummaryDetailLevel), RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <dxg:BackgroundBorderControl Width="{Binding Path=Width}" ItemLevel="{Binding Path=Level}" RowLevel="{Binding Path=(dx:DataObjectBase.DataObject).DetailLevel, RelativeSource={RelativeSource TemplatedParent}}" LineLevel="{Binding Path=(dx:DataObjectBase.DataObject).LineLevel, RelativeSource={RelativeSource TemplatedParent}}" IsMasterRowExpanded="{Binding Path=(dx:DataObjectBase.DataObject).IsMasterRowExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="detailLeftLine" dxg:DetailRowsIndentControl.IsSummaryDetailLevel="{Binding Path=(dxg:DetailRowsIndentControl.IsSummaryDetailLevel), RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1,0,0,0" HorizontalAlignment="Right" Width="{Binding Level, Converter={StaticResource DetailLevelToWidthConverter}}">
                            <Border.Margin>
                                <Binding Path="(dxg:DetailRowsIndentControl.IsSummaryDetailLevel)" RelativeSource="{RelativeSource Self}">
                                    <Binding.Converter>
                                        <dx:BoolToObjectConverter TrueValue="0,0,0,1" FalseValue="0" />
                                    </Binding.Converter>
                                </Binding>
                            </Border.Margin>
                            <Border.BorderBrush>
                                <Binding Path="(dxg:DetailRowsIndentControl.IsSummaryDetailLevel)" RelativeSource="{RelativeSource Self}">
                                    <Binding.Converter>
                                        <dx:BoolToObjectConverter TrueValue="#FF6E6E6E" FalseValue="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" />
                                    </Binding.Converter>
                                </Binding>
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   <!--END Include: \LightGray\Rows.xaml -->
    <!--START Include: \LightGray\TreeListIndentItems.xaml -->

    <ControlTemplate x:Key="TreeListViewThemeKey_IndentItemTemplate">
        <Path Height="Auto" Width="{StaticResource TreeListViewThemeKey_RowIndent}" Stroke="Gray" StrokeThickness="1">
            <Path.Data>
                <GeometryGroup>
                    <LineGeometry x:Name="PART_Line1" />
                    <LineGeometry x:Name="PART_Line2" />
                    <LineGeometry x:Name="PART_Line3" />
                </GeometryGroup>
            </Path.Data>
        </Path>
    </ControlTemplate>
    <!--END Include: \LightGray\TreeListIndentItems.xaml -->
    <!--START Include: \Generic\HeaderFooterItemsControlStyles.xaml -->
    <dxg:SummaryToTextConverter x:Key="SummaryToTextConverter" />
    
    

    <Style x:Key="TotalSummaryThemeKey_TotalSummaryTextControlStyle" TargetType="TextBlock">
        
    </Style>

    <Style x:Key="GridControlThemeKey_GroupPanelStyle" TargetType="dx:DXDockPanel">
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxg:GroupPanelColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TableViewThemeKey_SearchPanelContentTemplate" TargetType="ContentControl">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{StaticResource TableViewThemeKey_SearchPanelBackground}">
                        <dxg:GridSearchControl x:Name="PART_SearchControl" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Width="{StaticResource TableViewThemeKey_SearchPanelWidth}" HorizontalAlignment="Left">
                            <dxg:GridSearchControl.Margin>
                                <Binding Path="GroupPanelShown" ElementName="PART_SearchControl">
                                    <Binding.Converter>
                                        <dx:BoolToObjectConverter TrueValue="{StaticResource TableViewThemeKey_SearchPanelWithGroupedPanelMargin}" FalseValue="{StaticResource TableViewThemeKey_SearchPanelWithoutGroupedPanelMargin}" />
                                    </Binding.Converter>
                                </Binding>
                            </dxg:GridSearchControl.Margin>
                        </dxg:GridSearchControl>
                        <Border x:Name="PART_SearchPanelBorderBottom" BorderThickness="0,0,0,1" BorderBrush="{StaticResource TableViewThemeKey_SearchPanelBorderBottomBrush}">
                            <Border.Visibility>
                                <Binding Path="GroupPanelShown" ElementName="PART_SearchControl">
                                    <Binding.Converter>
                                        <dx:BoolToVisibilityInverseConverter />
                                    </Binding.Converter>
                                </Binding>
                            </Border.Visibility>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:FixedTotalSummaryControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:FixedTotalSummaryControl">
                    
                    
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dxg:FixedTotalSummaryContentPresenter x:Name="PART_Presenter" />
                        <TextBlock Grid.Column="1" Text="..." x:Name="PART_Ellipsis" VerticalAlignment="Center" />
                    </Grid>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style TargetType="dxg:FixedTotalSummaryItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <ContentControl Content="{Binding Converter={StaticResource SummaryToTextConverter}}" Tag="{Binding}" Foreground="{StaticResource GridRowThemeKey_TotalSummaryBrush}">
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:FixedTotalSummaryTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </ContentControl>
                        <TextBlock Name="commaTextBlock" Visibility="{Binding Item.IsLast, Converter={StaticResource BooleanToVisibilityConverterInverted}}" Foreground="{StaticResource GridRowThemeKey_TotalSummaryBrush}">
                            <TextBlock.Inlines>
                                <Run Text="," />
                                <Run Text="" />
                            </TextBlock.Inlines>
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <Style x:Key="TableViewThemeKey_FixedSummaryTextBlockStyle" TargetType="TextBlock">
        
    </Style>

    <Style TargetType="dxg:FixedTotalSummaryItemsTextBlock">
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:FixedTotalSummaryTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:FixedTotalSummaryItemsTextBlock">
                    <TextBlock Text="{Binding SummaryText, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TableViewThemeKey_FixedSummaryTextBlockStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="dxg:FixedTotalSummaryContainerControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:FixedTotalSummaryContainerControl">
                    <Grid>
                        <Border Background="{StaticResource GridRowThemeKey_FixedSummaryFillBrush}" BorderBrush="{StaticResource GridRowThemeKey_TotalSummaryBorderBrush}">
                            <Border.BorderThickness>
                                <Binding Path="View.IsRootView">
                                    <Binding.Converter>
                                        <dx:BoolToObjectConverter FalseValue="0,0,0,1" TrueValue="0,1,0,0" />
                                    </Binding.Converter>
                                </Binding>
                            </Border.BorderThickness>
                        </Border>
                        <dxg:FixedTotalSummaryControl x:Name="PART_FixedTotalSummary" MinHeight="29" Foreground="{StaticResource GridRowThemeKey_TotalSummaryBrush}" Margin="{StaticResource TableViewThemeKey_TotalSummaryPanelMargin}">
                            
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <dxg:FixedTotalSummaryItemsControl x:Name="PART_FixedTotalSummaryLeftPart" HorizontalAlignment="Left" Margin="6" ItemsSource="{Binding Path=(dxg:GridControl.CurrentView).FixedSummariesLeft, RelativeSource={RelativeSource TemplatedParent}}" />
                                <dxg:FixedTotalSummaryItemsControl Grid.Column="1" x:Name="PART_FixedTotalSummaryRightPart" HorizontalAlignment="Right" Margin="6" ItemsSource="{Binding Path=(dxg:GridControl.CurrentView).FixedSummariesRight, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>                            
                            
                            
                        </dxg:FixedTotalSummaryControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupRowThemeKey_GroupItemsControlStyle" TargetType="dx:CachedItemsControl">

        <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="GroupPanel" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXDockPanel dxgcore:BaseGridColumnHeader.CorrectDragIndicatorLocation="False" dxg:GridColumn.HeaderPresenterType="GroupPanel" Name="groupHeadersPanel" Background="Transparent" LastChildFill="False" Style="{StaticResource GridControlThemeKey_GroupPanelStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxg:GridColumnHeader dxg:GridColumn.HeaderPresenterType="GroupPanel" ColumnPosition="Standalone" DataContext="{Binding Content.Column, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumnHeader.GridColumn="{Binding}" dxg:GridColumn.VisibleIndex="{Binding Path=(dxg:GridColumn.GroupIndex)}" dxg:GridPopupMenu.GridMenuType="Column" dxb:BarManager.DXContextMenu="{Binding Path=View.GridMenu}" Command="{Binding Path=Commands.ChangeColumnSortOrder}">
                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:GroupPanelColumnHeaderTableViewHitTestAcceptor />
                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                    </dxg:GridColumnHeader>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GroupPanelColumnItemsControl" BasedOn="{StaticResource GroupRowThemeKey_GroupItemsControlStyle}">
        <Setter Property="MinHeight" Value="21" />
    </Style>

    <!--END Include: \Generic\HeaderFooterItemsControlStyles.xaml -->
    <!--START Include: \LightGray\TotalSummary.xaml -->
    <!--
          removed Color x:Key =BaseColor#FFCEDBEE-->
    <!--
          removed Color x:Key =BaseColor#FF9CB5DA-->
    <!--
          removed Color x:Key =BaseColor#FFDBE5F4-->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FFFFFFFF-->
    <ControlTemplate x:Key="TotalSummaryThemeKey_TotalSummaryControlTemplate">
        <Border Background="Transparent" BorderBrush="White" Margin="-1,6,0,6">
            <Border.BorderThickness>
                <Binding Path="Column.HasLeftSibling">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter TrueValue="1,0,0,0" FalseValue="0" />
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
            <Border.Opacity>
                <Binding Path="Column.HasTotalSummaries">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter TrueValue="1" FalseValue="0" />
                    </Binding.Converter>
                </Binding>
            </Border.Opacity>
            <Grid Margin="6,0,0,0" Name="rootGrid">
                <Border BorderBrush="White">
                    <Border.BorderThickness>
                        <Binding Path="Column.HasRightSibling">
                            <Binding.Converter>
                                <dx:BoolToObjectConverter TrueValue="0,0,1,0" FalseValue="0" />
                            </Binding.Converter>
                        </Binding>
                    </Border.BorderThickness>
                    <dxg:TotalSummaryContentPresenter DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=Column.ActualTotalSummaryContentStyle}" Content="{Binding}" ContentTemplateSelector="{Binding Path=Column.View.ActualTotalSummaryItemTemplateSelector}" />
                </Border>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="TotalSummaryThemeKey_TotalSummaryContentStyle" TargetType="dx:DataContentPresenter">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="3" />
    </Style>
    <!--END Include: \LightGray\TotalSummary.xaml -->
    <!--START Include: \LightGray\GridView.xaml -->


    <ControlTemplate x:Key="TotalSummaryThemeKey_FootersContentTemplate" TargetType="ContentControl">
        <Grid>
            <Border BorderBrush="Transparent" Background="#FF6E6E6E">
                <Border.BorderThickness>
                    <Binding Path="View.IsRootView">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="0,1,0,0" FalseValue="0,0,0,1" />
                        </Binding.Converter>
                    </Binding>
                </Border.BorderThickness>
            </Border>
            <ContentPresenter Margin="0,3,0,2" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="TableViewThemeKey_DataPresenterTemplate" TargetType="dxg:DataPresenter">
        <Border Background="Transparent">
            <ContentPresenter />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="TableViewThemeKey_OuterBorderElementTemplate" TargetType="dxg:OuterBorderElement">
    </ControlTemplate>
    <Style x:Key="TableViewThemeKey_ColumnChooserDragTextStyle" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="#FFA3A3A3" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="35,4" />
    </Style>
    <Style x:Key="TableViewThemeKey_GroupPanelDragTextStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="0,4,0,5" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>
    <Thickness x:Key="TableViewThemeKey_GroupPanelBorderThickness">0,0,0,1</Thickness>
    <Thickness x:Key="TableViewThemeKey_GroupPanelMargin">8</Thickness>
    <SolidColorBrush x:Key="TableViewThemeKey_GroupPanelBorderBrush" Color="White" />
    <ControlTemplate x:Key="TableViewThemeKey_GroupPanelContentTemplate" TargetType="dxg:GroupPanelControl">
        <dx:MeasurePixelSnapper>
            <Border x:Name="GroupPanelBorder" BorderBrush="{StaticResource TableViewThemeKey_GroupPanelBorderBrush}" BorderThickness="{StaticResource TableViewThemeKey_GroupPanelBorderThickness}" Background="Orange">
                <Grid Margin="{StaticResource TableViewThemeKey_GroupPanelMargin}">
                    <TextBlock x:Name="PART_GroupPanelDragText" Style="{StaticResource TableViewThemeKey_GroupPanelDragTextStyle}">
                        <TextBlock.Text>
                            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="GridGroupPanelText">
                                <Binding.Converter>
                                    <dxg:DynamicLocalizationStringValueConvertor />
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Text>
                    </TextBlock>
                    <dxg:GroupPanelContainer View="{Binding Path=View, RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>
            </Border>
        </dx:MeasurePixelSnapper>
    </ControlTemplate>
    <Style TargetType="dxg:GroupPanelControl">
        <Setter Property="Template" Value="{StaticResource TableViewThemeKey_GroupPanelContentTemplate}" />
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxg:GroupPanelColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
    </Style>
   
    <DataTemplate x:Key="TotalSummaryThemeKey_TotalSummaryItemTemplate">
        <TextBlock Text="{Binding Column.TotalSummaryText}" Style="{StaticResource TotalSummaryThemeKey_TotalSummaryTextControlStyle}" />
    </DataTemplate>

    <Style x:Key="GroupRowThemeKey_GroupRowStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="#FF6E6E6E" />
        <Setter Property="Background" Value="#FFE9E9E9" />

    </Style>
    <ControlTemplate x:Key="GroupRowThemeKey_GroupRowContentTemplate" TargetType="ContentControl">
        <Border x:Name="groupRowBorder" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="#FFD3D3D3" BorderThickness="0,0,0,1">
            <Grid dx:FrameworkElementHelper.EnableIsMouseOverOverride="True">
                <Grid.Background>
                    <Binding Path="(dx:FrameworkElementHelper.IsMouseOverOverride)" RelativeSource="{RelativeSource Self}">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter FalseValue="{StaticResource GridRowThemeKey_BorderNoneBrush}">
                                <dx:BoolToObjectConverter.TrueValue>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                        <GradientStop Color="#FFDCDCDC" Offset="0" />
                                        <GradientStop Color="#FFE2E2E2" Offset="1" />
                                    </LinearGradientBrush>
                                </dx:BoolToObjectConverter.TrueValue>
                            </dx:BoolToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.Background>
                <Border x:Name="groupRowBorderSelected" Background="#FFD8D8D8" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxg:SelectionStateToVisibilityConverter Value="Selected" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <Border x:Name="groupRowBorderFocused" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF9F9F9F" />
                            <GradientStop Color="#FF8C8C8C" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <ContentPresenter />
            </Grid>
        </Border>
    </ControlTemplate>

    <DataTemplate x:Key="GroupRowThemeKey_GroupValueTemplate">
        <Border Style="{Binding Path=View.GroupValueContentStyle}" VerticalAlignment="Center" Padding="0,0,0,1">
            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Path=DisplayText}" />
        </Border>
    </DataTemplate>
    <Thickness x:Key="GroupRowThemeKey_GroupColumnSummaryPadding">4,2,4,2</Thickness>
    <Thickness x:Key="GroupRowThemeKey_GroupDefaultSummaryPadding">0,2,0,2</Thickness>
    <SolidColorBrush x:Key="GroupRowThemeKey_GroupColumnSummaryFocusedBorderBrush" Color="Transparent" />
    <DataTemplate x:Key="GroupRowThemeKey_GroupRowTemplate">
        <dx:MeasurePixelSnapper>
            <dxg:GroupGridRowContent x:Name="PART_GroupRowContent" Style="{Binding Path=View.GroupRowStyle}">

                <dxg:GroupGridRowContent.Foreground>
                    <Binding Path="SelectionState">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="#FF464646">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="Focused" Value="White" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dxg:GroupGridRowContent.Foreground>

                <dx:DXDockPanel>
                    <dxg:GridGroupExpandButton x:Name="Toggle" Margin="8,2,0,2" VerticalAlignment="Center" HorizontalAlignment="Left" Command="{Binding View.Commands.ChangeGroupExpanded}" CommandParameter="{Binding RowHandle.Value}" IsChecked="{Binding Path=IsRowExpanded}" Foreground="{Binding Foreground, ElementName=PART_GroupRowContent}" />
                    <dxg:GroupValueContentPresenter Content="{Binding Path=GroupValue}" ContentTemplateSelector="{Binding Path=Content.Column.ActualGroupValueTemplateSelector, RelativeSource={RelativeSource Self}}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4,2,20,2">
                    </dxg:GroupValueContentPresenter>
                    <dxg:GroupSummaryContainer dxgcore:RowData.CurrentRowData="{Binding}" Name="PART_GroupSummaryPlaceHolder" />
                </dx:DXDockPanel>
            </dxg:GroupGridRowContent>
        </dx:MeasurePixelSnapper>
    </DataTemplate>
    <Style TargetType="dxg:GroupSummaryContentPresenter">
        <Setter Property="Margin" Value="0,0,4,0" />
    </Style>
    <ControlTemplate x:Key="GridRowThemeKey_FilterRowTemplate" TargetType="ContentControl">
        <Border Background="White" BorderBrush="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" BorderThickness="0,0,0,1">
            <Grid>
                <Border x:Name="borderFocused" Margin="0" UseLayoutRounding="True" Background="{StaticResource GridRowThemeKey_BorderFocusedBrush}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <ContentControl>
                    <ContentPresenter />
                </ContentControl>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="GridRowThemeKey_NewItemRowTemplate" TargetType="ContentControl">
        <Grid>
            <Border x:Name="rowDelimeterBorder" Background="White" BorderBrush="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" BorderThickness="0,0,0,1">
                <Grid>
                    <Border x:Name="borderFocused" Margin="0" UseLayoutRounding="True" Background="{StaticResource GridRowThemeKey_BorderFocusedBrush}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}">
                        <Border.Visibility>
                            <Binding Path="SelectionState">
                                <Binding.Converter>
                                    <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                                </Binding.Converter>
                            </Binding>
                        </Border.Visibility>
                    </Border>
                    <ContentControl>
                        <ContentPresenter />
                    </ContentControl>
                    <Border x:Name="backgroundBorder" Background="#FFFFFFFF" IsHitTestVisible="False" Visibility="{Binding Path=IsFocused, Converter={StaticResource BooleanToVisibilityConverterInverted}}">
                        <dx:MeasurePixelSnapper>
                            <TextBlock Foreground="#FFA3A3A3" Margin="0,1,0,2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="PART_GridNewRowText">
                                <TextBlock.Text>
                                    <Binding Path="View.LocalizationDescriptor" ConverterParameter="GridNewRowText">
                                        <Binding.Converter>
                                            <dxg:DynamicLocalizationStringValueConvertor />
                                        </Binding.Converter>
                                    </Binding>
                                </TextBlock.Text>
                            </TextBlock>
                        </dx:MeasurePixelSnapper>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="GridRowThemeKey_FilterCellContentPresenterTemplate" TargetType="dxg:FilterCellContentPresenter">
        <Border x:Name="ContentBorder" dxg:GridVerticalLinesHelper.VerticalLinesBrush="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}">

            <dxg:GridVerticalLinesHelper.ShowVerticalLines>
                <Binding Path="ShowVerticalLines" RelativeSource="{RelativeSource TemplatedParent}" />
            </dxg:GridVerticalLinesHelper.ShowVerticalLines>
            <dxg:GridVerticalLinesHelper.SelectionState>
                <Binding Path="RowData.SelectionState" />
            </dxg:GridVerticalLinesHelper.SelectionState>


            <Border.BorderThickness>
                <Binding Path="HasRightSibling" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter TrueValue="0,0,1,0" FalseValue="0" />
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
            <Border CornerRadius="2,2,2,2" Margin="2,2,2,2" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">

                <Border.Background>
                    <Binding Path="SelectionState" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter>
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="None" Value="{StaticResource GridRowThemeKey_CellBorderNoneBrush}" />
                                    <dx:EnumObjectProvider x:Key="Selected" Value="{StaticResource GridRowThemeKey_BorderSelectedBrush}" />
                                    <dx:EnumObjectProvider x:Key="Focused" Value="{StaticResource GridRowThemeKey_CellBorderFocusedBrush}" />
                                    <dx:EnumObjectProvider x:Key="FocusedAndSelected" Value="{StaticResource GridRowThemeKey_BorderFocusedBrush}" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Border.Background>

                <dxgcore:FilterRowCellEditor x:Name="PART_CellEditor">

                    <dxgcore:FilterRowCellEditor.FocusedRowForeground>
                        <Binding Path="RowData.SelectionState">
                            <Binding.Converter>
                                <dx:EnumToObjectConverter DefaultValue="Black">
                                    <dx:EnumToObjectConverter.Values>
                                        <dx:EnumObjectProvider x:Key="Focused" Value="{StaticResource GridRowThemeKey_TextFocusedBrush}" />
                                    </dx:EnumToObjectConverter.Values>
                                </dx:EnumToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </dxgcore:FilterRowCellEditor.FocusedRowForeground>
                    <dxgcore:FilterRowCellEditor.FocusedCellForeground>
                        <Binding Path="SelectionState" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:EnumToObjectConverter>
                                    <dx:EnumToObjectConverter.Values>
                                        <dx:EnumObjectProvider x:Key="Focused" Value="{StaticResource GridRowThemeKey_CellTextFocusedBrush}" />
                                        <dx:EnumObjectProvider x:Key="FocusedAndSelected" Value="{StaticResource GridRowThemeKey_TextFocusedBrush}" />
                                    </dx:EnumToObjectConverter.Values>
                                </dx:EnumToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </dxgcore:FilterRowCellEditor.FocusedCellForeground>
                    <dxgcore:FilterRowCellEditor.Template>
                        <ControlTemplate TargetType="ContentControl">
                            <dxe:InplaceEditorContentPresenter />
                        </ControlTemplate>
                    </dxgcore:FilterRowCellEditor.Template>

                </dxgcore:FilterRowCellEditor>
            </Border>
        </Border>

    </ControlTemplate>
<ControlTemplate x:Key="GridRowThemeKey_CellContentPresenterTemplate" TargetType="dxgcore:CellContentPresenter">
        <Border x:Name="ContentBorder" BorderThickness="0,0,1,0" Background="Transparent">
            <Border.BorderBrush>

                <SolidColorBrush x:Name="ContentBorderBorderBrush" Color="#FFD3D3D3" />
            </Border.BorderBrush>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFDBE9F9" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFdbe9f9" Duration="0" />
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF000000" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FocusedAndSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF6DA2DE" Duration="0" />
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFFFFFFF" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFFFFFFF" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF000000" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowVerticalLineStates">
                    <VisualState x:Name="Visible" />
                    <VisualState x:Name="VisibleFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorderBorderBrush" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="Transparent" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hidden">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderThickness">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border CornerRadius="2,2,2,2" Margin="2,2,2,2" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                <Border.Background>
                    <SolidColorBrush x:Name="InnerBorderBackground" Color="Transparent" />
                </Border.Background>

                <dxgcore:CellEditor x:Name="PART_CellEditor">
                    <dxgcore:CellEditor.Foreground>
                        <SolidColorBrush x:Name="Foreground" Color="Black" />
                    </dxgcore:CellEditor.Foreground>
                    <dxgcore:CellEditor.Template>
                        <ControlTemplate TargetType="ContentControl">
                            <dxe:InplaceEditorContentPresenter />
                        </ControlTemplate>
                    </dxgcore:CellEditor.Template>
                </dxgcore:CellEditor>
            </Border>
        </Border>

    </ControlTemplate>
<ControlTemplate x:Key="GridRowThemeKey_FitColumnContentTemplate">
        <Border Name="fitColumnVerticalLine" Background="Transparent" BorderBrush="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}">
            <Border.Opacity>
                <Binding Path="View.ShowVerticalLines">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                    </Binding.Converter>
                </Binding>
            </Border.Opacity>
            <Border.BorderThickness>
                <Binding Path="SelectionState">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="1,0,0,0">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Focused" Value="0" />
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>

        </Border>

    </ControlTemplate>
    <SolidColorBrush x:Key="TableViewThemeKey_ColumnChooserBackgroundBrush" Color="#FFFFFFFF" />
    <DataTemplate x:Key="GridColumnHeaderThemeKey_FixedColumnsDelimiterTemplate">
        <Border BorderBrush="#FFFFFFFF" BorderThickness="1,0,1,0" Background="#FF6E6E6E" />
    </DataTemplate>
    
    
    <DataTemplate x:Key="GridRowThemeKey_FixedColumnsDelimiterTemplate">
        <Border x:Name="border" Background="Transparent" BorderThickness="1,0,1,0" Margin="0,0,0,-1" BorderBrush="White">
            <Border Background="#FF6E6E6E">
                <Border.Visibility>
                    <Binding Path="View.ShowVerticalLines">
                        <Binding.Converter>
                            <dx:BoolToVisibilityConverter />
                        </Binding.Converter>
                    </Binding>
                </Border.Visibility>
            </Border>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="GridRowThemeKey_AutoFilterRowItemTemplate">
        <dxg:FilterCellContentPresenter RowData="{Binding RowData}" IsFocusedCell="{Binding Path=IsFocusedCell}" Column="{Binding Path=Column}" dxg:GridColumn.NavigationIndex="{Binding Path=Column.(dxg:GridColumn.VisibleIndex)}" Style="{Binding Path=Column.ActualAutoFilterRowCellStyle}" HasRightSibling="{Binding Path=Column.HasRightSibling}" HasLeftSibling="{Binding Path=Column.HasLeftSibling}" ShowVerticalLines="{Binding Path=Column.View.ShowVerticalLines}" Width="{Binding Path=Column.ActualAdditionalRowDataWidth}" SelectionState="{Binding Path=SelectionState}" />
    </DataTemplate>
    <DataTemplate x:Key="GridRowThemeKey_NewItemRowItemTemplate">
        <dxg:NewItemRowCellContentPresenter RowData="{Binding RowData}" IsFocusedCell="{Binding Path=IsFocusedCell}" Column="{Binding Path=Column}" dxg:GridColumn.NavigationIndex="{Binding Path=Column.(dxg:GridColumn.VisibleIndex)}" Style="{Binding Path=Column.ActualNewItemRowCellStyle}" HasRightSibling="{Binding Path=Column.HasRightSibling}" HasLeftSibling="{Binding Path=Column.HasLeftSibling}" ShowVerticalLines="{Binding Path=Column.View.ShowVerticalLines}" Width="{Binding Path=Column.ActualAdditionalRowDataWidth}" SelectionState="{Binding Path=SelectionState}" />
    </DataTemplate>
    <ControlTemplate x:Key="TableViewThemeKey_ScrollViewerTemplate">
        <dxg:ScrollViewerContentDecorator View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <Grid UseLayoutRounding="true">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <dx:BestFitDecorator x:Name="PART_BestFitControlDecorator" Width="0" Height="0" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                    <dxg:GridControl.CurrentViewChangedListener>
                        <dxg:BestFitControlDecoratorInitializer />
                    </dxg:GridControl.CurrentViewChangedListener>
                </dx:BestFitDecorator>

                <dx:PopupContainer x:Name="PART_PopupContainerDecorator" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                    <dxg:GridControl.CurrentViewChangedListener>
                        <dxg:PopupContainerDecoratorInitializer />
                    </dxg:GridControl.CurrentViewChangedListener>
                </dx:PopupContainer>
                <dxg:GroupPanelControl x:Name="PART_GroupPanel" Grid.Row="1" Visibility="Collapsed" dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                </dxg:GroupPanelControl>
                <dxgcore:AdditionalRowItemsControl Grid.Row="3" Margin="{StaticResource TableViewThemeKey_RowPresenterGridMargin}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                    <dxg:AutoFilterRowControl x:Name="PART_FilterRow" DataContext="{Binding Path=(dxg:GridControl.CurrentView).AutoFilterRowData, RelativeSource={RelativeSource TemplatedParent}}" RowTemplate="{StaticResource GridRowThemeKey_FilterRowTemplate}" ItemTemplate="{StaticResource GridRowThemeKey_AutoFilterRowItemTemplate}" IndicatorWidth="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowAutoFilterRow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxg:NewItemRowControl x:Name="PART_NewItemRow" Visibility="Collapsed" DataContext="{Binding Path=(dxg:GridControl.CurrentView).NewItemRowData, RelativeSource={RelativeSource TemplatedParent}}" RowTemplate="{StaticResource GridRowThemeKey_NewItemRowTemplate}" ItemTemplate="{StaticResource GridRowThemeKey_NewItemRowItemTemplate}" IndicatorWidth="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                        <dxg:GridControl.CurrentViewChangedListener>
                            <dxg:NewItemRowInitializer />
                        </dxg:GridControl.CurrentViewChangedListener>
                    </dxg:NewItemRowControl>
                </dxgcore:AdditionalRowItemsControl>
                <Border Width="1" HorizontalAlignment="Left" Grid.Row="3" Background="#FF6E6E6E" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />
                <dx:DXDockPanel Grid.Row="4">
                    <ContentPresenter x:Name="PART_FootersPanel" dx:DXDockPanel.Dock="Bottom" Content="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=(dxg:GridControl.CurrentView).FooterTemplate, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:TotalSummaryPanelTableViewHitTestAcceptor />
                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                    </ContentPresenter>
                    <Grid Margin="{StaticResource TableViewThemeKey_RowPresenterGridMargin}" x:Name="rowPresenterGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid Background="#FFFFFF99">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Margin="{StaticResource TableViewThemeKey_IndicatorMargin}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}">

                            </ContentControl>
                            <ScrollContentPresenter Grid.Row="1" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding Path=(dxg:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <dxgcore:FocusRectPresenter.IsVerticalScrollHost>True</dxgcore:FocusRectPresenter.IsVerticalScrollHost>

                                <ScrollContentPresenter.Name>ScrollContentPresenter</ScrollContentPresenter.Name>
                                <dxg:GridControl.CurrentViewChangedListener>
                                    <dxg:ScrollContentPresenterInitializer />
                                </dxg:GridControl.CurrentViewChangedListener>

                                <ScrollContentPresenter.Content>
                                    <dxg:DataPresenter x:Name="dataPresenter" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource TableViewThemeKey_DataPresenterTemplate}">
                                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                            <dxght:DataAreaTableViewHitTestAcceptor />
                                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                                    </dxg:DataPresenter>
                                </ScrollContentPresenter.Content>
                            </ScrollContentPresenter>
                            <ContentControl Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                <ContentControl.Visibility>
                                    <Binding Path="(dxg:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                                <dx:EnumToObjectConverter.Values>
                                                    <dx:EnumObjectProvider x:Key="Panel" Value="Visible" />
                                                </dx:EnumToObjectConverter.Values>
                                            </dx:EnumToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </ContentControl.Visibility>
                                <dx:WaitIndicator DeferedVisibility="{Binding Path=(dxg:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=(dxg:GridControl.CurrentView).WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </ContentControl>
                            <dxg:FixedGroupsAdorner Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ParentControl="{Binding Content, ElementName=dataPresenter}" FixedElements="{Binding Content.FixedElements, ElementName=dataPresenter}" />
                        </Grid>

                        <ScrollBar Grid.Column="1" Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                            <ScrollBar.IsEnabled>
                                <Binding Path="(dxg:GridControl.CurrentView).ValidationError" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dxg:ValidationErrorToIsEnabledConverter />
                                    </Binding.Converter>
                                </Binding>
                            </ScrollBar.IsEnabled>

                            <ScrollBar.Name>VerticalScrollBar</ScrollBar.Name>

                            <dxg:GridControl.CurrentViewChangedListener>
                                <dxg:VerticalScrollBarBlendCustomizationExtension />
                            </dxg:GridControl.CurrentViewChangedListener>
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:VerticalScrollBarTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </ScrollBar>
                        <ScrollBar Grid.Row="1" Orientation="Horizontal" Margin="{StaticResource TableViewThemeKey_HorizontalScrollbarMargin}" Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                            <ScrollBar.IsEnabled>
                                <Binding Path="(dxg:GridControl.CurrentView).ValidationError" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dxg:ValidationErrorToIsEnabledConverter />
                                    </Binding.Converter>
                                </Binding>
                            </ScrollBar.IsEnabled>

                            <ScrollBar.Name>HorizontalScrollBar</ScrollBar.Name>
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:HorizontalScrollBarTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </ScrollBar>
                        <Border Grid.Row="1" Grid.Column="1" x:Name="PART_HorizontalScrollCorner" Style="{StaticResource ScrollBarThemeKey_ScrollingCornerStyle}">
                        </Border>
                        <Grid Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" IsHitTestVisible="False" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}">
                            <Path x:Name="LeftBottomCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 754,628L 754,629C 754,630.657 755.343,632 757,632L 758,632L 758,633L 753,633L 753,628L 754,628 Z" Height="5" Margin="0,0,0,-1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="5" />
                            <Path x:Name="RightBottomCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 773,624L 773,625C 773,626.657 771.657,628 770,628L 769,628L 769,629L 774,629L 774,624L 773,624 Z" Height="5" Margin="0,0,0,-1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="5" />
                        </Grid>
                        <Border Background="#FF6E6E6E" Width="1" HorizontalAlignment="Left" Grid.RowSpan="2" Grid.Row="0" Margin="0,0,0,3" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />
                        <Border BorderBrush="Transparent" BorderThickness="0,1,0,0" Margin="0,-1,0,0" Grid.Row="1" VerticalAlignment="Top" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </dx:DXDockPanel>
                <Grid x:Name="TopRoundCorners" IsHitTestVisible="False" Grid.Row="0" Grid.RowSpan="5" VerticalAlignment="Top" RenderTransform="1,0,0,-1,0,1" RenderTransformOrigin="0.5,0.5" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}">
                    <Path x:Name="LeftTopCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 754,628L 754,629C 754,630.657 755.343,632 757,632L 758,632L 758,633L 753,633L 753,628L 754,628 Z" Height="5" Margin="0,0,0,-1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="5" />
                    <Path x:Name="RightTopCorner" Stretch="Fill" Fill="#FF6E6E6E" Data="F1 M 773,624L 773,625C 773,626.657 771.657,628 770,628L 769,628L 769,629L 774,629L 774,624L 773,624 Z" Height="5" Margin="0,0,0,-1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="5" />
                </Grid>
                <Border Background="#FF6E6E6E" Height="1" Margin="3,0,3,0" Grid.Row="0" Grid.RowSpan="5" VerticalAlignment="Top" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />
                <Border Background="#FF6E6E6E" Width="1" HorizontalAlignment="Right" Grid.RowSpan="3" Grid.Row="2" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />
                <Border BorderBrush="#FF6E6E6E" BorderThickness="1,0,1,1" Height="3" Grid.Row="0" Grid.RowSpan="5" VerticalAlignment="Bottom" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource AncestorType=dxg:GridControl}, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" />

                <ContentControl Grid.Row="0" x:Name="part_SearchControlContainer" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Style="{StaticResource TableViewThemeKey_SearchPanelContentTemplate}" />

                <ContentPresenter Name="PART_HeadersPanel" Grid.Row="2" Content="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(dxg:GridControl.CurrentView).HeaderPanelMinHeight, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=(dxg:GridControl.CurrentView).HeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                    <dxg:GridControl.CurrentViewChangedListener>
                        <dxg:HeadersPanelInitializer />
                    </dxg:GridControl.CurrentViewChangedListener>
                    <dxg:GridViewHitInfoBase.HitTestAcceptor>
                        <dxght:ColumnHeaderPanelTableViewHitTestAcceptor />
                    </dxg:GridViewHitInfoBase.HitTestAcceptor>
                </ContentPresenter>

                <dxg:OuterBorderElement Grid.Row="3" Grid.RowSpan="2" x:Name="outerBorder" ShowColumnHeaders="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}}" />

                <dxg:FixedTotalSummaryContainerControl Grid.Row="5" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowFixedTotalSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}" dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" dxg:GridPopupMenu.GridMenuType="FixedTotalSummary">
                </dxg:FixedTotalSummaryContainerControl>

                <dxg:FilterPanelContainer Grid.Row="6" x:Name="PART_FilterPanelContainer" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                <!--<dxg:FilterPanelControl Grid.Row="6" x:Name="PART_FilterPanel" DataContext="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=ActualShowFilterPanel, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->

                <dxgcore:FocusRectPresenter x:Name="PART_FocusRectPresenter" Grid.RowSpan="7" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" VerticalAlignment="Top" />
            </Grid>
        </dxg:ScrollViewerContentDecorator>
    </ControlTemplate>

    <!--END Include: \LightGray\GridView.xaml -->
    <!--START Include: \Generic\RowIndicator.xaml -->



    <ControlTemplate x:Key="RowIndicatorThemeKey_ItemsControlItemPanelTemplate">
        <dx:StackVisibleIndexPanel Orientation="Vertical" ArrangeAccordingToVisibleIndex="True" />
    </ControlTemplate>

    <ControlTemplate x:Key="RowIndicatorThemeKey_ItemTemplate">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding}" ContentTemplate="{StaticResource RowIndicatorThemeKey_RowTemplate}" dxg:GridPopupMenu.GridMenuType="RowCell" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" />
    </ControlTemplate>

    <ControlTemplate x:Key="RowIndicatorThemeKey_GroupPresenterTemplate">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding}" ContentTemplate="{StaticResource RowIndicatorThemeKey_GroupRowTemplate}" />
    </ControlTemplate>

    <ControlTemplate x:Key="RowIndicatorThemeKey_AdditionalTemplate">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding}" ContentTemplate="{StaticResource RowIndicatorThemeKey_RowTemplate}" />
    </ControlTemplate>

    <DataTemplate x:Key="RowIndicatorThemeKey_IconPresenterTemplate">
        <Border x:Name="errorIndicatorBorder" Background="Transparent">

            <Border.Resources>
                <dx:BoolToVisibilityConverter x:Name="BoolToVisibilityConverter" />
            </Border.Resources>
            <ToolTipService.ToolTip>
                <ToolTip Visibility="{Binding Path=HasValidationError, Converter={StaticResource BoolToVisibilityConverter}}">
                    <dx:DXDockPanel>
                        <dxe:ErrorControl Content="{Binding Path=ValidationError}" />
                        <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=ValidationError.ErrorContent}" />
                    </dx:DXDockPanel>
                </ToolTip>
            </ToolTipService.ToolTip>

            <ContentPresenter x:Name="iconPresenter" Content="{Binding}">


                <ContentPresenter.ContentTemplate>
                    <Binding Path="IndicatorState">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter>
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="None">
                                        <dx:EnumObjectProvider.Value>
                                            <DataTemplate>
                                                <Grid />
                                            </DataTemplate>
                                        </dx:EnumObjectProvider.Value>
                                    </dx:EnumObjectProvider>
                                    <dx:EnumObjectProvider x:Key="Focused" Value="{StaticResource RowIndicatorThemeKey_FocusedIconTemplate}" />
                                    <dx:EnumObjectProvider x:Key="Changed" Value="{StaticResource RowIndicatorThemeKey_ChangedIconTemplate}" />
                                    <dx:EnumObjectProvider x:Key="NewItemRow" Value="{StaticResource RowIndicatorThemeKey_NewItemRowIconTemplate}" />
                                    <dx:EnumObjectProvider x:Key="Editing" Value="{StaticResource RowIndicatorThemeKey_EditingIconTemplate}" />
                                    <dx:EnumObjectProvider x:Key="Error" Value="{StaticResource RowIndicatorThemeKey_ErrorIconTemplate}" />
                                    <dx:EnumObjectProvider x:Key="FocusedError" Value="{StaticResource RowIndicatorThemeKey_FocusedErrorIconTemplate}" />
                                    <dx:EnumObjectProvider x:Key="AutoFilterRow" Value="{StaticResource RowIndicatorThemeKey_AutoFilterRowIconTemplate}" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </ContentPresenter.ContentTemplate>

            </ContentPresenter>
        </Border>

    </DataTemplate>

    <!--END Include: \Generic\RowIndicator.xaml -->
    <!--START Include: \Generic\RowsControl.xaml -->
    <ControlTemplate x:Key="GroupRowThemeKey_GroupRowsControlContainerTemplate" TargetType="ContentControl">
        <ContentPresenter />
    </ControlTemplate>

    <ControlTemplate x:Key="GroupRowThemeKey_GroupRowsControlTemplate">
        <ContentControl Template="{StaticResource GroupRowThemeKey_GroupRowsControlContainerTemplate}">
            <dxg:RowsItemsControl ItemsSource="{Binding Path=Items}">
                <dxg:RowsItemsControl.ItemsPanel>
                    <ControlTemplate>
                        <dx:StackVisibleIndexPanel Orientation="Vertical" ArrangeAccordingToVisibleIndex="True" />
                    </ControlTemplate>
                </dxg:RowsItemsControl.ItemsPanel>
            </dxg:RowsItemsControl>
        </ContentControl>
    </ControlTemplate>

    <!--END Include: \Generic\RowsControl.xaml -->
    <!--START Include: \Generic\Rows.xaml -->

    <ControlTemplate x:Key="TableViewThemeKey_FixedNoneHeadersPanelTemplate">
        <dx:StackVisibleIndexPanel dxg:GridColumn.HeaderPresenterType="Headers" ArrangeAccordingToVisibleIndex="True" Name="headersPanel" Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedNoneColumnHeaderDropTargetFactory />
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="TableViewThemeKey_FixedNoneDropPanelTemplate">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
    </ControlTemplate>
    <ControlTemplate x:Key="TableViewThemeKey_FixedLeftHeadersPanelTemplate">
        <dx:StackVisibleIndexPanel dxg:GridColumn.HeaderPresenterType="Headers" ArrangeAccordingToVisibleIndex="True" Name="fixedLeftHeadersPanel" Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedLeftColumnHeaderDropTargetFactory />
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="TableViewThemeKey_FixedLeftNoneDropPanelTemplate">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
    </ControlTemplate>
    <ControlTemplate x:Key="TableViewThemeKey_FixedRightHeadersPanelTemplate">
        <dx:StackVisibleIndexPanel dxg:GridColumn.HeaderPresenterType="Headers" ArrangeAccordingToVisibleIndex="True" Name="fixedRightHeadersPanel" Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedRightColumnHeaderDropTargetFactory />
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="TableViewThemeKey_FixedRightNoneDropPanelTemplate">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
    </ControlTemplate>
    <ControlTemplate x:Key="GridRowThemeKey_RowDecorationTemplate" TargetType="ContentControl">
        <ContentPresenter />
    </ControlTemplate>
    <DataTemplate x:Key="GridRowThemeKey_RowToolTipTemplate">
        <dx:DXDockPanel LastChildFill="True">
            <dxe:ErrorControl Content="{Binding}" />
            <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=ErrorContent}" />
        </dx:DXDockPanel>
    </DataTemplate>
    <ControlTemplate x:Key="GridRowThemeKey_RowControlTemplate">
        <ContentControl Template="{Binding Path=View.RowDecorationTemplate}">
            <dxg:GridRowContent x:Name="PART_DataRow" Style="{Binding Path=View.RowStyle}" MinHeight="{Binding Path=View.RowMinHeight}">
                <dx:DXDockPanel>
                    <dxg:RowIndicatorControl Width="{Binding Path=View.ActualIndicatorWidth}" Template="{StaticResource RowIndicatorThemeKey_ItemTemplate}" Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}">
                    </dxg:RowIndicatorControl>
                    <dxg:DetailRowsIndentControl ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}" />
                    <ContentPresenter x:Name="PART_RowOffsetPresenter" />
                    <dxg:GridDetailExpandButtonContainer dx:FrameworkElementHelper.IsVisible="{Binding View.ActualShowDetailButtons}" />
                    <dx:DataContentPresenter x:Name="PART_DataRowContent" Content="{Binding}" ContentTemplateSelector="{Binding Path=View.ActualDataRowTemplateSelector}">
                        <dx:DataContentPresenter.Margin>
                            <Binding Path="View.ShowHorizontalLines">
                                <Binding.Converter>
                                    <dx:BoolToObjectConverter TrueValue="0,0,0,1" FalseValue="0,0,0,0" />
                                </Binding.Converter>
                            </Binding>
                        </dx:DataContentPresenter.Margin>
                        <ToolTipService.ToolTip>
                            <Binding Path="(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.HasValidationError)" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:BoolToObjectConverter FalseValue="{x:Null}">
                                        <dx:BoolToObjectConverter.TrueValue>
                                            <ToolTip Name="toolTip" Content="{Binding Path=(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.ValidationError), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{StaticResource GridRowThemeKey_RowToolTipTemplate}" />
                                        </dx:BoolToObjectConverter.TrueValue>
                                    </dx:BoolToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </ToolTipService.ToolTip>

                        <dx:DataContentPresenter.HorizontalContentAlignment>
                            <HorizontalAlignment>Stretch</HorizontalAlignment>
                        </dx:DataContentPresenter.HorizontalContentAlignment>


                        <dx:DataContentPresenter.VerticalContentAlignment>
                            <VerticalAlignment>Stretch</VerticalAlignment>
                        </dx:DataContentPresenter.VerticalContentAlignment>

                    </dx:DataContentPresenter>
                </dx:DXDockPanel>
            </dxg:GridRowContent>
        </ContentControl>
    </ControlTemplate>
    
    <Style TargetType="dxg:FixedDelimiter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter ContentTemplate="{StaticResource GridRowThemeKey_FixedColumnsDelimiterTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:RowsDelimiter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:FitRowContentPresenter">
        <Setter Property="Template" Value="{StaticResource GridRowThemeKey_FitColumnContentTemplate}" />
    </Style>
    <DataTemplate x:Key="GridRowThemeKey_DataRowTemplate">
        <dxg:GridScrollablePart x:Name="ScrollablePart" FixedColumnsDelimiterTemplate="{StaticResource GridRowThemeKey_FixedColumnsDelimiterTemplate}" ScrollingMargin="{Binding Path=View.ScrollingVirtualizationMargin}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" dxg:GridControl.CurrentView="{Binding Path=View}" FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}" FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}" FixedLineWidth="{Binding Path=View.FixedLineWidth}">
            <dxg:GridScrollablePart.FitContent>
                <dxg:FitRowContentPresenter Content="{Binding}" VerticalContentAlignment="Stretch" dxg:GridPopupMenu.GridMenuType="RowCell" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" />
            </dxg:GridScrollablePart.FitContent>
            <dxg:GridScrollablePart.FixedLeftContent>
                <dxg:CellItemsControl dxg:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedLeftCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedLeftNoneDropPanelTemplate}">
                </dxg:CellItemsControl>
            </dxg:GridScrollablePart.FixedLeftContent>
            <dxg:GridScrollablePart.FixedRightContent>
                <dxg:CellItemsControl dxg:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedRightCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedRightNoneDropPanelTemplate}">
                </dxg:CellItemsControl>
            </dxg:GridScrollablePart.FixedRightContent>
            <dxg:GridScrollablePart.FixedNoneContent>
                <dxg:CellItemsControl dxg:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedNoneCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedNoneDropPanelTemplate}">
                </dxg:CellItemsControl>
            </dxg:GridScrollablePart.FixedNoneContent>
        </dxg:GridScrollablePart>
    </DataTemplate>


    <ControlTemplate x:Key="GroupRowThemeKey_GroupRowControlTemplate">
        <Grid x:Name="group" Visibility="{Binding IsRowVisible, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <dxg:RowIndicatorControl Grid.Column="0" Template="{StaticResource RowIndicatorThemeKey_GroupPresenterTemplate}" Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}" Width="{Binding Path=View.ActualIndicatorWidth}">
            </dxg:RowIndicatorControl>
            <dxg:DetailRowsIndentControl Grid.Column="1" ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}" />
            <dxg:GroupRowOffsetPresenter Grid.Column="2" />
            <ContentControl Grid.Column="3" Template="{StaticResource GroupRowThemeKey_GroupRowControlContainerTemplate}">
                <ContentControl Template="{StaticResource GroupRowThemeKey_GroupRowControlHeaderContentTemplate}">
                    <dx:DoubleClicker CommandParameter="{Binding RowHandle.Value}" Command="{Binding View.Commands.ChangeGroupExpanded}" HorizontalContentAlignment="Stretch">
                        <dxg:GroupGridRowPresenter x:Name="PART_HeaderContentPresenter" dx:ExpandHelper.ExpandSpeed="{Binding Path=View.(dx:ExpandHelper.ExpandSpeed)}" ContentTemplateSelector="{Binding Path=View.ActualGroupRowTemplateSelector}" Content="{Binding}" Style="{StaticResource GroupRowThemeKey_GroupRowPresenterStyle}" />
                    </dx:DoubleClicker>
                </ContentControl>
            </ContentControl>
        </Grid>
    </ControlTemplate>

    <Style x:Key="GridRowThemeKey_CellStyle" TargetType="dxgcore:CellContentPresenter">
        <Setter Property="Background" Value="{StaticResource GridRowThemeKey_CellBorderNoneBrush}" />

    </Style>
    <ControlTemplate x:Key="GridControlThemeKey_GroupPanelCaptionTemplate" TargetType="dxg:GroupPanelCaptionControl">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="GridControlThemeKey_DetailHeaderControlTemplate" TargetType="dxg:DetailHeaderControl">
        <dxg:DetailRowsContentControl View="{Binding Path=MasterRowData.View, RelativeSource={RelativeSource TemplatedParent}}" DetailDescriptor="{Binding Path=DetailDescriptor, RelativeSource={RelativeSource TemplatedParent}}">
            <dxg:DetailDescriptorContentBorder>
                    <dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding DetailDescriptor.HeaderContent, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DetailDescriptor.HeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxg:DetailDescriptorContentBorder>
        </dxg:DetailRowsContentControl>
    </ControlTemplate>
   <!--END Include: \Generic\Rows.xaml -->
    <!--START Include: \Generic\GridView.xaml -->
    
    
    
    <dxg:NewItemRowPositionToVisibilityConverter x:Key="NewItemRowPositionToVisibilityConverter" />
    <!--<Style x:Key="SearchPanelContentControlStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <ContentPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="dxg:OuterBorderElement">
        <Setter Property="Template" Value="{StaticResource TableViewThemeKey_OuterBorderElementTemplate}" />
    </Style>
    <Style TargetType="dxg:ColumnHeaderPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dxg:ExpandButtonColumnHeader ColumnPosition="{Binding View.ExpandColumnPosition}" Width="{Binding Path=(dxg:GridControl.CurrentView).ActualExpandDetailHeaderWidth, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowDetailButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <dxg:GridScrollablePart FixedColumnsDelimiterTemplate="{StaticResource GridColumnHeaderThemeKey_FixedColumnsDelimiterTemplate}" ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" dxg:GridControl.CurrentView="{Binding Path=View}" Grid.Column="1" FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}" FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}" FixedLineWidth="{Binding Path=View.FixedLineWidth}">
                            <dxg:GridScrollablePart.FitContent>
                                <dxg:FitColumnHeader ColumnPosition="Right" />
                            </dxg:GridScrollablePart.FitContent>
                            <dxg:GridScrollablePart.FixedLeftContent>
                                <dxg:HeaderItemsControl dxg:GridColumn.HeaderPresenterType="Headers" ItemsSource="{Binding Path=FixedLeftCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedLeftHeadersPanelTemplate}">
                                </dxg:HeaderItemsControl>
                            </dxg:GridScrollablePart.FixedLeftContent>
                            <dxg:GridScrollablePart.FixedRightContent>
                                <dxg:HeaderItemsControl dxg:GridColumn.HeaderPresenterType="Headers" ItemsSource="{Binding Path=FixedRightCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedRightHeadersPanelTemplate}">
                                </dxg:HeaderItemsControl>
                            </dxg:GridScrollablePart.FixedRightContent>
                            <dxg:GridScrollablePart.FixedNoneContent>
                                <dxg:HeaderItemsControl dxg:GridColumn.HeaderPresenterType="Headers" x:Name="headerItemsControl" ItemsSource="{Binding Path=FixedNoneCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedNoneHeadersPanelTemplate}">
                                </dxg:HeaderItemsControl>
                            </dxg:GridScrollablePart.FixedNoneContent>
                        </dxg:GridScrollablePart>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="TableViewThemeKey_HeadersTemplate">
        <dx:MeasurePixelSnapper>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid>
                    <dxg:IndicatorColumnHeader x:Name="PART_Indicator" ColumnPosition="Left" Width="{Binding Path=(dxg:GridControl.CurrentView).IndicatorHeaderWidth, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                        <dxg:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:ColumnButtonTableViewHitTestAcceptor />
                        </dxg:GridViewHitInfoBase.HitTestAcceptor>
                    </dxg:IndicatorColumnHeader>
                    <ContentControl Template="{StaticResource GridColumnHeaderThemeKey_IndicatorColumnHeaderTemplate}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
                <dxg:ColumnHeaderPanel Grid.Column="1" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                <!--<dxg:VerticalLinesPainter x:Name="linesPainter" LineBrush="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=HeadersVerticalLineBrush}}" VerticalLines="{Binding Path=(dxg:GridControl.ActiveView).HeaderVerticalLines, RelativeSource={RelativeSource TemplatedParent}}"/>-->
            </Grid>
        </dx:MeasurePixelSnapper>
    </DataTemplate>
    <DataTemplate x:Key="TableViewThemeKey_TotalSummaryContainerTemplate">
        <dxg:GridTotalSummary DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=Column.ActualHeaderWidth}" dxg:GridColumn.VisibleIndex="{Binding Path=Column.(dxg:GridColumn.VisibleIndex)}" dxb:BarManager.DXContextMenu="{Binding Path=Column.View.DataControlMenu}">
            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                <dxght:TotalSummaryTableViewHitTestAcceptor />
            </dxg:GridViewHitInfoBase.HitTestAcceptor>
        </dxg:GridTotalSummary>
    </DataTemplate>
    <DataTemplate x:Key="TotalSummaryThemeKey_FootersTemplate">
        <dx:MeasurePixelSnapper>
            <ContentControl Template="{StaticResource TotalSummaryThemeKey_FootersContentTemplate}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentControl x:Name="PART_Indicator" Width="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummaryIndicatorIndent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <ContentControl Grid.Column="1" x:Name="PART_ExpandDetailColumn" Width="{Binding Path=(dxg:GridControl.CurrentView).ActualExpandDetailHeaderWidth, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowDetailButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <dxg:GridScrollablePart ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" dxg:GridControl.CurrentView="{Binding Path=View}" Grid.Column="2" FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}" FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}" FixedLineWidth="{Binding Path=View.FixedLineWidth}">
                        <dxg:GridScrollablePart.FixedLeftContent>
                            <dxg:TotalSummaryItemsControl ItemTemplate="{StaticResource TableViewThemeKey_TotalSummaryContainerTemplate}" ItemsSource="{Binding FixedLeftCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedLeftNoneDropPanelTemplate}">
                            </dxg:TotalSummaryItemsControl>
                        </dxg:GridScrollablePart.FixedLeftContent>
                        <dxg:GridScrollablePart.FixedRightContent>
                            <dxg:TotalSummaryItemsControl ItemTemplate="{StaticResource TableViewThemeKey_TotalSummaryContainerTemplate}" ItemsSource="{Binding FixedRightCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedRightNoneDropPanelTemplate}">
                            </dxg:TotalSummaryItemsControl>
                        </dxg:GridScrollablePart.FixedRightContent>
                        <dxg:GridScrollablePart.FixedNoneContent>
                            <dxg:TotalSummaryItemsControl ItemTemplate="{StaticResource TableViewThemeKey_TotalSummaryContainerTemplate}" x:Name="footerItemsControl" ItemsSource="{Binding FixedNoneCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedNoneDropPanelTemplate}">
                            </dxg:TotalSummaryItemsControl>
                        </dxg:GridScrollablePart.FixedNoneContent>
                    </dxg:GridScrollablePart>
                </Grid>
            </ContentControl>
        </dx:MeasurePixelSnapper>
    </DataTemplate>

    <ControlTemplate x:Key="TableViewThemeKey_ControlTemplate">
        <ScrollViewer x:Name="scr" VerticalScrollBarVisibility="{Binding VerticalScrollbarVisibility, RelativeSource={RelativeSource TemplatedParent}}" HorizontalScrollBarVisibility="{Binding HorizontalScrollbarVisibility, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource TableViewThemeKey_ScrollViewerTemplate}">

            <ScrollViewer.IsTabStop>False</ScrollViewer.IsTabStop>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="TableViewThemeKey_ColumnChooserTemplate">
        <dx:NonLogicalDecorator>
            <dxg:ColumnChooserControl Owner="{Binding Path=(dxg:GridControl.ActiveView), RelativeSource={RelativeSource TemplatedParent}}" />
        </dx:NonLogicalDecorator>
    </ControlTemplate>

    <!--END Include: \Generic\GridView.xaml -->
    <!--START Include: \LightGray\GridControl.xaml -->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FF6593CF-->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FFE3EFFF-->
    <!--
          removed SolidColorBrush x:Key =BaseBrush#FF202020-->

    <ControlTemplate x:Key="GridControlThemeKey_ErrorPanelTemplate" TargetType="dxg:ErrorPanel">
        <Border CornerRadius="3" Padding="1" Margin="5,5,5,5">
            <Border.Background>
                <SolidColorBrush Color="#FF484848" Opacity="0.9" />
            </Border.Background>
            <Border CornerRadius="2">
                <Border.Background>
                    <SolidColorBrush Color="#FF6E6E6E" Opacity="0.9" />
                </Border.Background>
                <Grid Width="247" Margin="5,5,5,18">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="9,3,0,0" Foreground="White" Text="Error" Grid.Row="0" Grid.Column="1" TextAlignment="Left" FontSize="18" />
                    <Image x:Name="icon" Grid.RowSpan="2" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Left">
                        <Image.Source>
                            <Binding Source="DevExpress.Xpf.Core.Core.Images.ErrorIcon.png" Converter="{dx:EmbeddedResourceImageConverter}" />
                        </Image.Source>
                    </Image>
                    <TextBlock Padding="9,3,0,0" Foreground="White" Text="{Binding}" Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" TextAlignment="Left" />
                </Grid>
            </Border>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="GridControlThemeKey_BorderTemplate" TargetType="ContentControl">
        <!--<Border x:Name="border" Background="Transparent">
            <Border.Padding>
                <Binding Path="(dxg:GridBorderHelper.ShowBorder)" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1"/>
                    </Binding.Converter>
                </Binding>
            </Border.Padding>-->
        <Border Background="#FF6E6E6E">
            <Border.CornerRadius>
                <Binding Path="(dxg:GridBorderHelper.ShowBorder)" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="3" />
                    </Binding.Converter>
                </Binding>
            </Border.CornerRadius>
            <dx:FrameworkElementHelper.ClipCornerRadius>
                <Binding Path="(dxg:GridBorderHelper.ShowBorder)" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="3" />
                    </Binding.Converter>
                </Binding>
            </dx:FrameworkElementHelper.ClipCornerRadius>
            <ContentPresenter />
        </Border>
        <!--</Border>-->
    </ControlTemplate>

    <ControlTemplate x:Key="GridControlThemeKey_Template" TargetType="dxgcore:DataControlBase">

        <Grid>
            <dx:DXArranger>
                <dxg:DXGridThemesLoader x:Name="PART_ThemesLoader" dxgcore:GridBorderHelper.ShowBorder="{Binding Path=ShowBorder, RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource GridControlThemeKey_BorderTemplate}" />
            </dx:DXArranger>
            <dxg:ErrorPanel x:Name="PART_ErrorPanel" Visibility="Collapsed" />
            <dx:WaitIndicator x:Name="PART_LoadingPanel" DeferedVisibility="{TemplateBinding ShowLoadingPanel}" Style="{Binding Path=View.WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>

    </ControlTemplate>

    <ControlTemplate x:Key="GridControlThemeKey_FocusedGroupRowBorderTemplate">
        <Rectangle StrokeDashArray="2 2" Stroke="#FF202020" StrokeThickness="1" Margin="1,1,1,3" />
    </ControlTemplate>
    <ControlTemplate x:Key="GridControlThemeKey_VerticalFocusedGroupRowBorderTemplate">
        <Rectangle StrokeDashArray="2 2" Stroke="#FF202020" StrokeThickness="1" Margin="1,1,3,1" />
    </ControlTemplate>
    <Style TargetType="dxg:DetailHeaderControl">
        <Setter Property="Foreground" Value="#FF6E6E6E" />
        <Setter Property="Template" Value="{StaticResource GridControlThemeKey_DetailHeaderControlTemplate}" />
    </Style>
    <Style TargetType="dxg:GroupPanelCaptionControl">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Template" Value="{StaticResource GridControlThemeKey_GroupPanelCaptionTemplate}" />
    </Style>
    <Style TargetType="dxg:DetailDescriptorContentBorder">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="ShowBottomLine" Value="{Binding ShowBottomLine, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:DetailDescriptorContentBorder">
                    <Border BorderBrush="White">
                        <Border.BorderThickness>
                            <Binding Path="ShowBottomLine" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:BoolToObjectConverter TrueValue="0,0,0,1" FalseValue="0" />
                                </Binding.Converter>
                            </Binding>
                        </Border.BorderThickness>
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="GridControlThemeKey_FocusedRowBorderTemplate">
        <Rectangle StrokeDashArray="2 2" Stroke="#FF202020" StrokeThickness="1" />
    </ControlTemplate>
    <ControlTemplate x:Key="GridControlThemeKey_FocusedCellBorderTemplate">
        <Rectangle StrokeDashArray="2 2" Stroke="#FF202020" StrokeThickness="1" Margin="0,0,1,0" />
    </ControlTemplate>
    
   <!--END Include: \LightGray\GridControl.xaml -->
    <!--START Include: \LightGray\ColumnHeaderDragIndicator.xaml -->

    <DataTemplate x:Key="GridColumnHeaderThemeKey_DragIndicatorTemplate">
        <dx:DXDockPanel Name="content">
            <Grid x:Name="GlyphUp" Width="13" Height="13" HorizontalAlignment="Center" VerticalAlignment="Top" dx:DXDockPanel.Dock="Top" RenderTransformOrigin="0.5,0.5">
                <Path Stretch="Fill" Fill="#FFF78A09" Data="F1 M 0,5L 6,11L 7,11L 13,5L 13,4L 10,4L 10,0L 3,0L 3,4L 0,4L 0,5 Z" Width="13" Height="11" />
                <Path Stretch="Fill" Fill="#FFF78A09" Data="F1 M 1,5L 6,10L 7,10L 12,5L 9,5L 9,1L 4,1L 4,5L 1,5 Z" Width="11" Height="9" />
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="ArrowUpTransform" X="1" Y="0" />
                </Grid.RenderTransform>
            </Grid>
            <Grid x:Name="GlyphDown" Width="13" Height="13" HorizontalAlignment="Center" VerticalAlignment="Bottom" dx:DXDockPanel.Dock="Bottom" RenderTransformOrigin="0.5,0.5">
                <Path Stretch="Fill" Fill="#FFF78A09" Data="F1 M 13,6L 7,0L 6,0L 0,6L 0,7L 3,7L 3,11L 10,11L 10,7L 13,7L 13,6 Z" Width="13" Height="11" />
                <Path Stretch="Fill" Fill="#FFF78A09" Data="F1 M 12,6L 7,1L 6,1L 1,6L 4,6L 4,10L 9,10L 9,6L 12,6 Z" Width="11" Height="9" />
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="ArrowDownTransform" X="1" Y="0" />
                </Grid.RenderTransform>
            </Grid>


            <Grid Height="{Binding (dxg:TableView.ColumnHeaderDragIndicatorSize), RelativeSource={RelativeSource TemplatedParent}}" />

            <dx:DXDockPanel.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ArrowUpTransform" From="0" To="4" Duration="00:00:00.75" Storyboard.TargetProperty="Y" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="ArrowDownTransform" From="0" To="-4" Duration="00:00:00.75" Storyboard.TargetProperty="Y" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </dx:DXDockPanel.Triggers>
            <dx:DXDockPanel.RenderTransform>
                <TranslateTransform X="-7.40686" Y="-14" />
            </dx:DXDockPanel.RenderTransform>
        </dx:DXDockPanel>

    </DataTemplate>

    <!--END Include: \LightGray\ColumnHeaderDragIndicator.xaml -->
    <!--START Include: \Generic\GridControl.xaml -->
	
   <!--END Include: \Generic\GridControl.xaml -->
    <!--START Include: \Generic\DefaultGridViewStyles.xaml -->
    <!--PROCESS SETTERS WITH BINDING-->
    
    <dx:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" HandleList="false" />
    <dxg:FilterPanelCaptionConverter x:Key="FilterPanelCaptionConverter" />
    <dxg:GroupDetailNameConverter x:Key="GroupDetailNameConverter" />
    <DataTemplate x:Key="GridColumnHeaderThemeKey_DragElementTemplate">
        <Grid VerticalAlignment="Top" HorizontalAlignment="Left" DataContext="{Binding Path=Content.Column, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxg:DragGridColumnHeader x:Name="header" dxg:GridColumnHeader.GridColumn="{Binding}" ColumnPosition="Standalone" Width="{Binding Path=(dxg:GridColumnHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(dxg:GridColumnHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}" />
            <dx:DragIconControl Grid.Row="1" Grid.Column="1" Margin="-12,-12,0,0" x:Name="dropIndicator" DragType="Remove">
                <dx:DragIconControl.Opacity>
                    <Binding Path="(dxg:GridColumnHeader.IsInDropArea)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="1" FalseValue="0" />
                        </Binding.Converter>
                    </Binding>
                </dx:DragIconControl.Opacity>
            </dx:DragIconControl>
        </Grid>
        
    </DataTemplate>


    <Style x:Key="GridColumnHeaderBaseStyle" TargetType="dxgcore:GridColumnHeaderBase">
        <Setter Property="Template" Value="{StaticResource GridColumnHeaderThemeKey_ControlTemplate}" />
        <Setter Property="dxg:GridColumnHeader.DragElementTemplate" Value="{StaticResource GridColumnHeaderThemeKey_DragElementTemplate}" />
        
    </Style>
    <Style TargetType="dxg:FitColumnHeader" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:FitColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="Headers" />
    </Style>
    <Style TargetType="dxg:IndicatorColumnHeader" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:IndicatorColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="Headers" />
    </Style>
    <Style TargetType="dxg:ExpandButtonColumnHeader" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:IndicatorColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="Headers" />
    </Style>
    <Style x:Key="GridColumnHeaderThemeKey_FilterAreaStyle" TargetType="dxe:PopupBaseEdit">
        <Setter Property="Foreground" Value="{StaticResource GridColumnHeaderThemeKey_FilterPopupForegroundBrush}" />
        <Setter Property="Template" Value="{StaticResource GridColumnHeaderThemeKey_FilterAreaTemplate}" />
    </Style>
    <Style x:Key="GridColumnHeaderStyle" TargetType="dxg:GridColumnHeader" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
        <Setter Property="ColumnFilterPopupStyle" Value="{StaticResource GridColumnHeaderThemeKey_FilterAreaStyle}" />
    </Style>
    <Style TargetType="dxg:GridColumnHeader" BasedOn="{StaticResource GridColumnHeaderStyle}">
    </Style>

    <Style TargetType="dxg:DragGridColumnHeader" BasedOn="{StaticResource GridColumnHeaderStyle}">
        <Setter Property="Opacity" Value="0.5" />

    </Style>
    <Style TargetType="dxg:FilterCellContentPresenter">
        <Setter Property="Template" Value="{StaticResource GridRowThemeKey_FilterCellContentPresenterTemplate}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="dxg:NewItemRowCellContentPresenter">
        <Setter Property="Template" Value="{StaticResource GridRowThemeKey_CellContentPresenterTemplate}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="dxg:GridRowContent">
        <Setter Property="Template" Value="{StaticResource GridRowThemeKey_RowControlContainerTemplate}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" />
    </Style>
    <Style TargetType="dxg:GroupGridRowContent">
        <Setter Property="Template" Value="{StaticResource GroupRowThemeKey_GroupRowContentTemplate}" />
    </Style>

    <Style TargetType="dxg:ColumnChooserControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:ColumnChooserControl">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ScrollViewer.Template>
                            <ControlTemplate TargetType="ScrollViewer">
                                <Grid Background="{StaticResource TableViewThemeKey_ColumnChooserBackgroundBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ScrollContentPresenter Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" />
                                    <ScrollBar Grid.Column="1" Grid.RowSpan="2" Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">

                                        <ScrollBar.Name>VerticalScrollBar</ScrollBar.Name>
                                    </ScrollBar>
                                    <ScrollBar Grid.Row="1" Orientation="Horizontal" Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Visibility="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">

                                        <ScrollBar.Name>HorizontalScrollBar</ScrollBar.Name>
                                    </ScrollBar>
                                    <Border Grid.Row="1" Grid.Column="1" x:Name="PART_HorizontalScrollCorner" Style="{StaticResource ScrollBarThemeKey_ScrollingCornerStyle}" Margin="0" />
                                </Grid>
                            </ControlTemplate>
                        </ScrollViewer.Template>
                        <Grid>
                            <dxg:ColumnItemsControl ItemsSource="{Binding Path=Owner.ColumnChooserColumns, RelativeSource={RelativeSource TemplatedParent}}">
                                <dxg:ColumnItemsControl.Visibility>
                                    <Binding Path="Owner.ColumnChooserColumns" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:ObjectToVisibilityConverter />
                                        </Binding.Converter>
                                    </Binding>
                                </dxg:ColumnItemsControl.Visibility>
                                <dxg:ColumnItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <dxg:GridColumnHeader DataContext="{Binding Path=Content.Column, RelativeSource={RelativeSource TemplatedParent}}" dxg:GridColumn.HeaderPresenterType="ColumnChooser" dxg:GridColumnHeader.GridColumn="{Binding}" Margin="1,1,1,0" ColumnPosition="Standalone" UseLayoutRounding="True" dxg:GridPopupMenu.GridMenuType="Column" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" />
                                    </DataTemplate>
                                </dxg:ColumnItemsControl.ItemTemplate>
                                <dxg:ColumnItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <StackPanel dxg:GridColumn.HeaderPresenterType="ColumnChooser" Orientation="Vertical" Margin="1,1,1,2" />
                                    </ControlTemplate>
                                </dxg:ColumnItemsControl.ItemsPanel>
                            </dxg:ColumnItemsControl>
                            <TextBlock Style="{StaticResource TableViewThemeKey_ColumnChooserDragTextStyle}">
                                <TextBlock.Text>
                                    <Binding ConverterParameter="ColumnChooserDragText" Path="Owner.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dxg:DynamicLocalizationStringValueConvertor />
                                        </Binding.Converter>
                                    </Binding>
                                </TextBlock.Text>
                                <TextBlock.Visibility>
                                    <Binding Path="Owner.ColumnChooserColumns" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:ObjectToVisibilityConverter Invert="True" />
                                        </Binding.Converter>
                                    </Binding>
                                </TextBlock.Visibility>
                            </TextBlock>
                        </Grid>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:ColumnChooserDropTargetFactory />
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="ColumnChooser" />
    </Style>
    <Style TargetType="dxg:BestFitControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:BestFitControl">
                    <dxg:GridRowContent Style="{Binding Path=RowData.View.RowStyle, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxg:GridRowContent.Template>
                            <ControlTemplate TargetType="dxg:GridRowContent">
                                <ContentPresenter />
                            </ControlTemplate>
                        </dxg:GridRowContent.Template>
                        <dxg:BestFitGridCellContentPresenter x:Name="PART_CellContentPresenter" IsFocusedCell="{TemplateBinding IsFocusedCell}" RowData="{Binding RowData, RelativeSource={RelativeSource TemplatedParent}}" Column="{TemplateBinding Column}" HasRightSibling="True" />
                    </dxg:GridRowContent>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GridTotalSummary">
        <Setter Property="Template" Value="{StaticResource TotalSummaryThemeKey_TotalSummaryControlTemplate}" />
    </Style>


    <DataTemplate x:Key="GroupRowThemeKey_GroupSummaryItemTemplate">
        <Border Style="{Binding Path=View.GroupSummaryContentStyle}">
            <StackPanel Orientation="Horizontal" Name="defaultGroupSummaryItemTemplateStackPanel">
                <TextBlock Text="{Binding Text}" />
                <TextBlock Text="," Name="commaTextBlock" Visibility="{Binding IsLast, Converter={StaticResource BooleanToVisibilityConverterInverted}}" />
            </StackPanel>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="GroupRowThemeKey_GroupColumnSummaryItemTemplate">
        <TextBlock Text="{Binding Value}" TextAlignment="Right" Name="textBlock">

        </TextBlock>

    </DataTemplate>
    <Style x:Key="DataViewBaseStyle" TargetType="dxgcore:DataViewBase">
        <Setter Property="HeaderTemplate" Value="{StaticResource TableViewThemeKey_HeadersTemplate}" />
        <Setter Property="FooterTemplate" Value="{StaticResource TotalSummaryThemeKey_FootersTemplate}" />
        <Setter Property="TotalSummaryItemTemplate" Value="{StaticResource TotalSummaryThemeKey_TotalSummaryItemTemplate}" />
        <Setter Property="ColumnHeaderTemplate" Value="{StaticResource GridColumnHeaderThemeKey_ContentTemplate}" />
        <Setter Property="ColumnHeaderCustomizationAreaTemplate" Value="{StaticResource GridColumnHeaderThemeKey_CustomizationAreaTemplate}" />
        <Setter Property="CellStyle" Value="{StaticResource GridRowThemeKey_CellStyle}" />
        <Setter Property="TotalSummaryContentStyle" Value="{StaticResource TotalSummaryThemeKey_TotalSummaryContentStyle}" />
        <Setter Property="ColumnHeaderDragIndicatorTemplate" Value="{StaticResource GridColumnHeaderThemeKey_DragIndicatorTemplate}" />
        <Setter Property="ColumnChooserTemplate" Value="{StaticResource TableViewThemeKey_ColumnChooserTemplate}" />
        <Setter Property="Margin" Value="{StaticResource TableViewThemeKey_Margin}" />
        <Setter Property="FocusedCellBorderTemplate" Value="{StaticResource GridControlThemeKey_FocusedCellBorderTemplate}" />
        <Setter Property="FocusedGroupRowBorderTemplate" Value="{StaticResource GridControlThemeKey_FocusedGroupRowBorderTemplate}" />

    </Style>
    <Style x:Key="GridViewBaseStyle" TargetType="dxg:GridViewBase" BasedOn="{StaticResource DataViewBaseStyle}">
        <Setter Property="GroupRowTemplate" Value="{StaticResource GroupRowThemeKey_GroupRowTemplate}" />
        <Setter Property="GroupValueTemplate" Value="{StaticResource GroupRowThemeKey_GroupValueTemplate}" />
        <Setter Property="DefaultGroupSummaryItemTemplate" Value="{StaticResource GroupRowThemeKey_GroupSummaryItemTemplate}" />
        <Setter Property="GroupSummaryItemTemplate" Value="{StaticResource GroupRowThemeKey_GroupSummaryItemTemplate}" />
        <Setter Property="GroupRowStyle" Value="{StaticResource GroupRowThemeKey_GroupRowStyle}" />

    </Style>

    <sys:String x:Key="GroupRowThemeKey_ExpandingStoryboard">
        &lt;Storyboard&gt;
            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress"&gt;
                    &lt;SplineDoubleKeyFrame KeyTime="0:0:1" Value="1" KeySpline="0,0,0,1"/&gt;
            &lt;/DoubleAnimationUsingKeyFrames&gt;
        &lt;/Storyboard&gt;
    </sys:String>
    <sys:String x:Key="GroupRowThemeKey_CollapsingStoryboard">
        &lt;Storyboard&gt;
            &lt;DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress"&gt;
                    &lt;SplineDoubleKeyFrame KeyTime="0:0:1" Value="0" KeySpline="0,0,1,0.25"/&gt;
            &lt;/DoubleAnimationUsingKeyFrames&gt;
        &lt;/Storyboard&gt;
    </sys:String>

    <Style TargetType="dxg:TableView" BasedOn="{StaticResource GridViewBaseStyle}">
        <Setter Property="PrintRowTemplate" Value="{StaticResource TableViewThemeKey_PrintRowTemplate}" />
        <Setter Property="PrintHeaderTemplate" Value="{StaticResource TableViewThemeKey_PrintHeaderTemplate}" />
        <Setter Property="PrintFooterTemplate" Value="{StaticResource TableViewThemeKey_PrintFooterTemplate}" />
        <Setter Property="PrintFixedFooterTemplate" Value="{StaticResource TableViewThemeKey_PrintFixedFooterTemplate}" />
        <Setter Property="PrintGroupRowTemplate" Value="{StaticResource TableViewThemeKey_PrintGroupRowTemplate}" />
        <Setter Property="PrintColumnHeaderStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintHeaderStyle}" />
        <Setter Property="PrintTotalSummaryStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintTotalSummaryStyle}" />
        <Setter Property="PrintFixedTotalSummaryStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintFixedTotalSummaryStyle}" />
        <Setter Property="PrintGroupRowStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintGroupRowStyle}" />
        <Setter Property="PrintCellStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintCellStyle}" />
        <Setter Property="PrintRowIndentStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintRowIndentStyle}" />
        <Setter Property="AutoFilterRowCellStyle" Value="{StaticResource GridRowThemeKey_CellStyle}" />
        <Setter Property="NewItemRowCellStyle" Value="{StaticResource GridRowThemeKey_CellStyle}" />
        <Setter Property="Template" Value="{StaticResource TableViewThemeKey_ControlTemplate}" />
        <Setter Property="RowDecorationTemplate" Value="{StaticResource GridRowThemeKey_RowDecorationTemplate}" />
        <Setter Property="RowIndicatorContentTemplate" Value="{StaticResource RowIndicatorThemeKey_IconPresenterTemplate}" />
        <Setter Property="DefaultDataRowTemplate" Value="{StaticResource GridRowThemeKey_DataRowTemplate}" />
        <Setter Property="UseGroupShadowIndent" Value="{StaticResource TableViewThemeKey_UseGroupShadowIndent}" />
        <Setter Property="DataRowTemplate" Value="{StaticResource GridRowThemeKey_DataRowTemplate}" />
        <Setter Property="LeftDataAreaIndent" Value="{StaticResource TableViewThemeKey_LeftDataAreaIndent}" />
        <Setter Property="RightDataAreaIndent" Value="{StaticResource TableViewThemeKey_RightDataAreaIndent}" />
        <Setter Property="LeftGroupAreaIndent" Value="{StaticResource TableViewThemeKey_LeftGroupAreaIndent}" />
        <Setter Property="RightGroupAreaIndent" Value="{StaticResource TableViewThemeKey_RightGroupAreaIndent}" />
        <Setter Property="FixedLineWidth" Value="{StaticResource TableViewThemeKey_FixedLineWidth}" />
        <Setter Property="IndicatorWidth" Value="{StaticResource TableViewThemeKey_IndicatorWidth}" />
        <Setter Property="ExpandDetailButtonWidth" Value="{StaticResource TableViewThemeKey_ExpandDetailButtonWidth}" />
        <Setter Property="ExpandStoryboard" Value="{StaticResource GroupRowThemeKey_ExpandingStoryboard}" />
        <Setter Property="CollapseStoryboard" Value="{StaticResource GroupRowThemeKey_CollapsingStoryboard}" />
        <Setter Property="FocusedRowBorderTemplate" Value="{StaticResource GridControlThemeKey_FocusedRowBorderTemplate}" />
        <Setter Property="GroupColumnSummaryItemTemplate" Value="{StaticResource GroupRowThemeKey_GroupColumnSummaryItemTemplate}" />

    </Style>
    <Style TargetType="dxg:TreeListView" BasedOn="{StaticResource DataViewBaseStyle}">
        <Setter Property="PrintRowTemplate" Value="{StaticResource TableViewThemeKey_PrintRowTemplate}" />
        <Setter Property="PrintHeaderTemplate" Value="{StaticResource TableViewThemeKey_PrintHeaderTemplate}" />
        <Setter Property="PrintFooterTemplate" Value="{StaticResource TableViewThemeKey_PrintFooterTemplate}" />
        <Setter Property="PrintFixedFooterTemplate" Value="{StaticResource TableViewThemeKey_PrintFixedFooterTemplate}" />
        <Setter Property="PrintColumnHeaderStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintHeaderStyle}" />
        <Setter Property="PrintTotalSummaryStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintTotalSummaryStyle}" />
        <Setter Property="PrintFixedTotalSummaryStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintFixedTotalSummaryStyle}" />
        <Setter Property="PrintCellStyle" Value="{StaticResource TableViewThemeKey_DefaultPrintCellStyle}" />
        <Setter Property="PrintRowIndentStyle" Value="{StaticResource TreeListViewThemeKey_DefaultPrintRowIndentStyle}" />
        <Setter Property="AutoFilterRowCellStyle" Value="{StaticResource GridRowThemeKey_CellStyle}" />
        <Setter Property="RowIndent" Value="{StaticResource TreeListViewThemeKey_RowIndent}" />
        <Setter Property="RowPresenterMargin" Value="{StaticResource TableViewThemeKey_RowPresenterGridMargin}" />
        <Setter Property="Template" Value="{StaticResource TableViewThemeKey_ControlTemplate}" />
        <Setter Property="RowDecorationTemplate" Value="{StaticResource GridRowThemeKey_RowDecorationTemplate}" />
        <Setter Property="RowIndicatorContentTemplate" Value="{StaticResource RowIndicatorThemeKey_IconPresenterTemplate}" />
        <Setter Property="DefaultDataRowTemplate" Value="{StaticResource GridRowThemeKey_DataRowTemplate}" />
        <Setter Property="DataRowTemplate" Value="{StaticResource GridRowThemeKey_DataRowTemplate}" />
        <Setter Property="LeftDataAreaIndent" Value="{StaticResource TableViewThemeKey_LeftDataAreaIndent}" />
        <Setter Property="RightDataAreaIndent" Value="{StaticResource TableViewThemeKey_RightDataAreaIndent}" />
        <Setter Property="FixedLineWidth" Value="{StaticResource TableViewThemeKey_FixedLineWidth}" />
        <Setter Property="IndicatorWidth" Value="{StaticResource TableViewThemeKey_IndicatorWidth}" />
        <Setter Property="FocusedRowBorderTemplate" Value="{StaticResource GridControlThemeKey_FocusedRowBorderTemplate}" />
        <Setter Property="TreeLineStyle" Value="{StaticResource TreeListViewThemeKey_DefaultTreeLineStyle}" />

    </Style>
    <Style TargetType="dxg:RowMarginControl">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{StaticResource TreeListViewThemeKey_RowMarginBackgroundBrush}">
                        <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <Path x:Name="PART_TreeLinePath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <dxg:IndentsPanel RowIndent="{Binding View.RowIndent}" HorizontalAlignment="Right">
                            <dxg:TreeListNodeExpandButton x:Name="PART_ExpandButton" HorizontalAlignment="Left" Command="{Binding View.Commands.ChangeNodeExpanded}" CommandParameter="{Binding RowHandle.Value}" IsChecked="{Binding IsExpanded}" IsExpandButtonVisible="{Binding Path=IsButtonVisible}" />
                            <dxe:CheckEdit x:Name="PART_NodeCheckBox" Visibility="{Binding IsCheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}" IsEnabled="{Binding IsCheckBoxEnabled}" IsChecked="{Binding IsChecked, Mode=TwoWay}" IsThreeState="{Binding View.AllowIndeterminateCheckState}">
                                <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                    <dxgtl:TreeListNodeCheckboxHitTestAcceptor />
                                </dxg:GridViewHitInfoBase.HitTestAcceptor>
                            </dxe:CheckEdit>
                            <dx:MeasurePixelSnapper Visibility="{Binding IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Image x:Name="PART_NodeImage" Width="16" Height="16" Source="{Binding Image}">
                                    <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                        <dxgtl:TreeListNodeImageHitTestAcceptor />
                                    </dxg:GridViewHitInfoBase.HitTestAcceptor>
                                    
                                </Image>
                            </dx:MeasurePixelSnapper>
                        </dxg:IndentsPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:RowOffsetPresenter">
        <Setter Property="Template" Value="{StaticResource RowIndicatorThemeKey_RowOffsetTemplate}" />
    </Style>
    <Style TargetType="dxg:GroupRowOffsetPresenter">
        <Setter Property="Template" Value="{StaticResource RowIndicatorThemeKey_GroupRowOffsetTemplate}" />
    </Style>
    

    <Style x:Key="DataControlBaseStyle" TargetType="dxgcore:DataControlBase">

        <Setter Property="UseLayoutRounding" Value="true" />
        <Setter Property="Template" Value="{StaticResource GridControlThemeKey_Template}" />

    </Style>
    <Style TargetType="dxg:GridControl" BasedOn="{StaticResource DataControlBaseStyle}">
        <Setter Property="dx:DXSerializer.SerializationIDDefault" Value="GridControl" />
    </Style>
    <Style TargetType="dxg:TreeListControl" BasedOn="{StaticResource DataControlBaseStyle}">
    </Style>
    <Style TargetType="dxg:AdditionalRowContainerControl">
        <Setter Property="Foreground" Value="{StaticResource GridRowThemeKey_TextUnfocusedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:AdditionalRowContainerControl">
                    <dx:DXDockPanel MinHeight="{Binding Path=View.RowMinHeight}">
                        <dxg:RowIndicatorControl dx:DXDockPanel.Dock="Left" Width="{TemplateBinding IndicatorWidth}" Template="{StaticResource RowIndicatorThemeKey_AdditionalTemplate}" Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}">
                        </dxg:RowIndicatorControl>
                        <dxg:BackgroundBorderControl Width="{Binding Path=View.ExpandDetailButtonWidth}" Visibility="{Binding View.ActualShowDetailButtons, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <ContentControl Template="{Binding Path=RowTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                            <dx:MeasurePixelSnapper>
                                <dxg:GridScrollablePart x:Name="ScrollablePart" FixedColumnsDelimiterTemplate="{StaticResource GridRowThemeKey_FixedColumnsDelimiterTemplate}" ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" dxg:GridControl.CurrentView="{Binding Path=View}" FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}" FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}" FixedLineWidth="{Binding Path=View.FixedLineWidth}">
                                    <dxg:GridScrollablePart.FitContent>
                                        <dxg:FitRowContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Stretch" />
                                    </dxg:GridScrollablePart.FitContent>

                                    <dxg:GridScrollablePart.FixedLeftContent>
                                        <dxg:RowItemsControl Name="PART_FixedLeftColumnsItemsControl" ItemsSource="{Binding Path=FixedLeftCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedLeftNoneDropPanelTemplate}" ItemTemplate="{TemplateBinding ItemTemplate}" />
                                    </dxg:GridScrollablePart.FixedLeftContent>
                                    <dxg:GridScrollablePart.FixedRightContent>
                                        <dxg:RowItemsControl Name="PART_FixedRightColumnsItemsControl" ItemsSource="{Binding Path=FixedRightCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedRightNoneDropPanelTemplate}" ItemTemplate="{TemplateBinding ItemTemplate}" />
                                    </dxg:GridScrollablePart.FixedRightContent>
                                    <dxg:GridScrollablePart.FixedNoneContent>
                                        <dxg:RowItemsControl Name="PART_FixedNoneColumnsItemsControl" ItemsSource="{Binding Path=FixedNoneCellData}" ItemsPanel="{StaticResource TableViewThemeKey_FixedNoneDropPanelTemplate}" ItemTemplate="{TemplateBinding ItemTemplate}" />
                                    </dxg:GridScrollablePart.FixedNoneContent>
                                </dxg:GridScrollablePart>
                            </dx:MeasurePixelSnapper>
                        </ContentControl>
                    </dx:DXDockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GridViewDataRowsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:RowsItemsControl ItemsSource="{Binding Path=Items}">
                        <dxg:RowsItemsControl.ItemsPanel>
                            <ControlTemplate>
                                <dx:StackVisibleIndexPanel Orientation="Vertical" ArrangeAccordingToVisibleIndex="True" />
                            </ControlTemplate>
                        </dxg:RowsItemsControl.ItemsPanel>
                    </dxg:RowsItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GridRow">
        <Setter Property="Foreground" Value="Black" />

        <Setter Property="Template" Value="{StaticResource GridRowThemeKey_RowControlTemplate}" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GridViewGroupRowsControl">
        <Setter Property="Template" Value="{StaticResource GroupRowThemeKey_GroupRowsControlTemplate}" />
    </Style>
    <Style TargetType="dxg:GroupGridRow">

        <Setter Property="dx:DXExpander.AllowTracksRevealing" Value="False" />
        <Setter Property="Template" Value="{StaticResource GroupRowThemeKey_GroupRowControlTemplate}" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupRowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="dxg:GridScrollablePart">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GridScrollablePart">
                    <dx:DXDockPanel x:Name="PART_ScrollablePartPanel" LastChildFill="True">
                        <ContentPresenter Name="PART_FixedLeftContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
                        <ContentPresenter x:Name="PART_FixedLeftLinePlaceHolder" dx:DXDockPanel.Dock="Left" Visibility="Collapsed">
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:FixedLeftDivTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </ContentPresenter>
                        <Border Name="PART_FixedNoneCellsBorder" dx:DXDockPanel.Dock="Left">
                            <dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
                                True
                            </dxgcore:FocusRectPresenter.IsHorizontalScrollHost>

                            <dx:FrameworkElementExtensions.IsClipped>
                                True
                            </dx:FrameworkElementExtensions.IsClipped>

                            <ContentPresenter Name="PART_FixedNoneContent" />
                        </Border>
                        <ContentPresenter x:Name="PART_FixedRightLinePlaceHolder" dx:DXDockPanel.Dock="Left" Visibility="Collapsed">
                            <dxg:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:FixedRightDivTableViewHitTestAcceptor />
                            </dxg:GridViewHitInfoBase.HitTestAcceptor>
                        </ContentPresenter>
                        <ContentPresenter Name="PART_FixedRightContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
                        <dxg:FitContentContainer>
                            <ContentPresenter Name="PART_FitContent" />
                        </dxg:FitContentContainer>
                    </dx:DXDockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GridCellContentPresenter">
        <Setter Property="Template" Value="{StaticResource GridRowThemeKey_CellContentPresenterTemplate}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" />
        <Setter Property="dxb:BarManager.DXContextMenuPlacement" Value="Bottom" />
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GroupGridRowPresenter">
        
    </Style>
    <Style TargetType="dxg:GroupSummaryDefaultLayoutControl">
        <Setter Property="Margin" Value="{StaticResource GroupRowThemeKey_GroupDefaultSummaryPadding}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxg:GroupSummaryContentPresenter VerticalAlignment="Center" Content="{Binding}" ContentTemplateSelector="{Binding Path=View.ActualGroupSummaryItemTemplateSelector}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <dx:BoolToThicknessConverter x:Key="GroupColumnSummaryBoolToThicknessConverter" ThicknessFalse="0" ThicknessTrue="0,0,1,0" />
    <Style TargetType="dxg:GroupColumnSummaryControl">
        <Setter Property="Padding" Value="{StaticResource GroupRowThemeKey_GroupColumnSummaryPadding}" />
        <Setter Property="NormalBorderBrush" Value="{StaticResource GridRowThemeKey_GridDataRowDelimiterBrush}" />
        <Setter Property="FocusedBorderBrush" Value="{StaticResource GroupRowThemeKey_GroupColumnSummaryFocusedBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GroupColumnSummaryControl">
                    <Border Padding="{TemplateBinding Padding}" BorderThickness="{Binding HasRightSibling, Converter={StaticResource GroupColumnSummaryBoolToThicknessConverter}}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Width="{Binding Column.ActualHeaderWidth}">
                        <ContentPresenter x:Name="PART_Content" Content="{Binding}" ContentTemplate="{Binding View.GroupColumnSummaryItemTemplate}" Visibility="{Binding HasSummary, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GroupSummaryItemsControl">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxg:GroupColumnSummaryControl IsReady="{Binding Path=GroupRowData.IsReady}" IsGroupRowFocused="{Binding GroupRowData.IsFocused}" Style="{Binding View.GroupColumnSummaryContentStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel" Value="{StaticResource TableViewThemeKey_FixedNoneDropPanelTemplate}" />
    </Style>
    <Style TargetType="dxg:GroupSummaryAlignByColumnsLayoutControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GroupSummaryAlignByColumnsLayoutControl">
                    <Border> 
                        <dx:FrameworkElementExtensions.IsClipped>True</dx:FrameworkElementExtensions.IsClipped>
                        <!--<dxg:GridScrollablePart x:Name="ScrollablePart" FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}"
                                                        FitContentWidth="{Binding Path=(dxg:GridControl.CurrentView).AdditionalRowFitColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                                        >-->
                        <dxg:GridScrollablePart x:Name="PART_ScrollablePart" FixedColumnsDelimiterTemplate="{StaticResource GridRowThemeKey_FixedColumnsDelimiterTemplate}" ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" dxg:GridControl.CurrentView="{Binding Path=View}" FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}" FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}" FixedLineWidth="{Binding Path=View.FixedLineWidth}">
                            <dxg:GridScrollablePart.FixedLeftContent>
                                <dxg:GroupSummaryItemsControl Name="PART_FixedLeftColumnsItemsControl" ItemsSource="{Binding Path=FixedLeftGroupSummaryData}" />
                            </dxg:GridScrollablePart.FixedLeftContent>
                            <dxg:GridScrollablePart.FixedRightContent>
                                <dxg:GroupSummaryItemsControl Name="PART_FixedRightColumnsItemsControl" ItemsSource="{Binding Path=FixedRightGroupSummaryData}" />
                            </dxg:GridScrollablePart.FixedRightContent>
                            <dxg:GridScrollablePart.FixedNoneContent>
                                <dxg:GroupSummaryItemsControl Name="PART_FixedNoneColumnsItemsControl" ItemsSource="{Binding Path=FixedNoneGroupSummaryData}" />
                            </dxg:GridScrollablePart.FixedNoneContent>
                            <dxg:GridScrollablePart.FitContent>
                                <dxg:FitRowContentPresenter Content="{Binding}" VerticalContentAlignment="Stretch" />
                            </dxg:GridScrollablePart.FitContent>
                        </dxg:GridScrollablePart>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GridGroupExpandButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:GridToggleStateButton dx:DataObjectBase.DataObject="{Binding}" dx:DataObjectBase.NeedsResetEvent="True" x:Name="toggleButton" ClickMode="Press" IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Command="{Binding Path=Command, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Path=CommandParameter, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource GroupRowThemeKey_ExpandButtonStyle}" Foreground="{TemplateBinding Foreground}">


                    </dxg:GridToggleStateButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupRowButtonTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GridDetailExpandButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:GridToggleStateButton dx:DataObjectBase.DataObject="{Binding}" dx:DataObjectBase.NeedsResetEvent="True" x:Name="toggleButton" ClickMode="Press" IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Command="{Binding Path=Command, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Path=CommandParameter, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible="{Binding Path=(dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}">
                    </dxg:GridToggleStateButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <dx:BooleanToDoubleConverter x:Key="BooleanToDoubleConverter" />
    <Style TargetType="dxg:TreeListNodeExpandButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:TreeListNodeExpandButton">
                    <dx:DXExpander HorizontalAlignment="Left" AnimationProgress="{Binding IsExpandButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToDoubleConverter}}">
                        <dxg:GridToggleStateButton dx:DataObjectBase.DataObject="{Binding}" dx:DataObjectBase.NeedsResetEvent="True" x:Name="toggleButton" ClickMode="Press" IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Command="{Binding Path=Command, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Path=CommandParameter, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource GroupRowThemeKey_ExpandButtonStyle}" Foreground="{TemplateBinding Foreground}">
                        </dxg:GridToggleStateButton>
                    </dx:DXExpander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="dxg:DetailRowsContentControl">
        <Setter Property="dxg:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding Path=(dxg:DetailSummaryControlBase.SummaryDetailLevel), RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:DetailRowsContentControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dxg:DetailRowIndicatorControl Width="{Binding Path=View.ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource RowIndicatorThemeKey_ItemTemplate}" Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                        </dxg:DetailRowIndicatorControl>
                        <Border Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource GridRowThemeKey_DetailTotalSummaryIndentBorderStyle}" Visibility="{Binding Path=NeedBottomLine, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <dxg:DetailRowsIndentControl Grid.Column="1" ItemsSource="{Binding Path=DetailDescriptor.DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter Grid.Column="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:DetailContentControl">
        <Setter Property="Foreground" Value="{StaticResource GridRowThemeKey_TextUnfocusedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:DetailContentControl">
                    <dxg:DetailRowsContentControl View="{Binding Path=MasterRowData.View, RelativeSource={RelativeSource TemplatedParent}}" DetailDescriptor="{Binding Path=DetailDescriptor, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxg:DetailDescriptorContentBorder>
                            <dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding MasterRowData.Row, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DetailDescriptor.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxg:DetailDescriptorContentBorder>
                    </dxg:DetailRowsContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:DetailTabHeadersControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:DetailTabHeadersControl">
                    <dxg:DetailRowsContentControl View="{Binding Path=View}" DetailDescriptor="{Binding Path=View.DataControl.DetailDescriptor}">
                        <Border MinHeight="20">
                            <dxg:DetailTabControl Padding="0" SelectedIndex="{Binding Path=SelectedTabIndex, Mode=TwoWay}">
                                <dxg:DetailTabControl.ItemsSource>
                                    <Binding Path="DetailDescriptor.DetailDescriptors" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dxgcore:DetailDescriptorCollectionConverter />
                                        </Binding.Converter>
                                    </Binding>
                                </dxg:DetailTabControl.ItemsSource>
                                <dxg:DetailTabControl.ItemHeaderTemplate>
                                    <DataTemplate>
                                        <dxg:DetailTabHeaderContentControl Content="{Binding Content.HeaderContent}" />
                                    </DataTemplate>
                                </dxg:DetailTabControl.ItemHeaderTemplate>
                                <dxg:DetailTabControl.ItemTemplate>
                                    <DataTemplate />
                                </dxg:DetailTabControl.ItemTemplate>
                            </dxg:DetailTabControl>
                            <!--<dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding MasterRowData.Row, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DetailDescriptor.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>-->
                        </Border>
                    </dxg:DetailRowsContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:DetailTabHeaderContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:DetailTabHeaderContentControl">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:DetailColumnHeadersControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:DetailColumnHeadersControl">
                    <dxgcore:DetailRowContentPresenter MinHeight="20" MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding}" dxg:GridControl.CurrentView="{Binding View}">
                        <dxgcore:DetailRowContentPresenter.ContentTemplate>
                            <DataTemplate>
                                <dxg:DetailRowsContentControl View="{Binding Path=View}" DetailDescriptor="{Binding Path=View.DataControl.OwnerDetailDescriptor}" NeedBottomLine="True">
                                    <dxg:ColumnHeaderPanel dxg:GridControl.CurrentView="{Binding Path=View}" />
                                </dxg:DetailRowsContentControl>
                            </DataTemplate>
                        </dxgcore:DetailRowContentPresenter.ContentTemplate>
                        <dxg:GridControl.CurrentViewChangedListener>
                            <dxg:HeadersPanelInitializer />
                        </dxg:GridControl.CurrentViewChangedListener>
                    </dxgcore:DetailRowContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:DetailTotalSummaryControl">
        <Setter Property="dxg:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding DetailLevel}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:DetailTotalSummaryControl">
                    <dxg:DetailRowsContentControl View="{Binding Path=View}" DetailDescriptor="{Binding Path=View.DataControl.OwnerDetailDescriptor}" NeedBottomLine="True">
                        <Border MinHeight="20">
                            <dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding}" ContentTemplate="{Binding View.FooterTemplate}" dxg:GridControl.CurrentView="{Binding View}" />
                        </Border>
                    </dxg:DetailRowsContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:DetailFixedTotalSummaryControl">
        <Setter Property="dxg:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding DetailLevel}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:DetailFixedTotalSummaryControl">
                    <dxg:DetailRowsContentControl View="{Binding Path=View}" DetailDescriptor="{Binding Path=View.DataControl.OwnerDetailDescriptor}" NeedBottomLine="True">
                        <Border MinHeight="20">
                            <dxg:FixedTotalSummaryContainerControl dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" dxg:GridControl.CurrentView="{Binding Path=View}" dxg:GridPopupMenu.GridMenuType="FixedTotalSummary" />
                                <!--<dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}"  Content="{Binding}" dxg:GridControl.CurrentView="{Binding View}"/>-->
                        </Border>
                    </dxg:DetailRowsContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:GroupPanelContainer">
        <Setter Property="DetailPartTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GroupPanelContainer">
                    <dx:DXDockPanel Grid.Row="1">
                        <ItemsControl Name="PART_NextLevelItemsControl" dx:DXDockPanel.Dock="Bottom">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <dxg:GroupPanelContainer DetailDescriptor="{Binding Content}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Grid Visibility="{Binding View.ShowGroupPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_BorderSeparator" Background="{StaticResource TableViewThemeKey_GroupPanelSeparatorBrush}" Height="1" Margin="0,11,0,11" />
                            <dx:DXDockPanel Grid.Row="1">
                                <dxg:GroupPanelCaptionControl Content="{Binding View.DetailHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GroupDetailNameConverter}}" Visibility="{Binding Content, RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectToVisibilityConverter}}" VerticalAlignment="Center" />
                                <dxg:GroupPanelColumnItemsControl ItemsSource="{Binding Path=View.GroupedColumns, RelativeSource={RelativeSource TemplatedParent}}" x:Name="groupPanelItemsControl" />
                            </dx:DXDockPanel>
                        </Grid>
                    </dx:DXDockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:FilterPanelContainer">
        <Setter Property="DetailPartTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:FilterPanelContainer">
                    <dx:DXDockPanel>
                        <!--<dxg:FilterPanelControl x:Name="PART_FilterPanel"
                            DataContext="{Binding Path=View, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding Path=View.ActualShowFilterPanel, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>-->
                        <ItemsControl Name="PART_NextLevelItemsControl" dx:DXDockPanel.Dock="Bottom">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <dxg:FilterPanelContainer DetailDescriptor="{Binding Content}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <dx:DXDockPanel Visibility="{Binding Path=View.ActualShowFilterPanel, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxg:FilterPanelControl x:Name="PART_FilterPanel" DataContext="{Binding Path=View, RelativeSource={RelativeSource TemplatedParent}}" FilterPanelContent="{Binding View.DetailHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FilterPanelCaptionConverter}}" />
                        </dx:DXDockPanel>
                    </dx:DXDockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dxg:ErrorPanel">
        <Setter Property="Template" Value="{StaticResource GridControlThemeKey_ErrorPanelTemplate}" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style TargetType="dxg:HeaderContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:HeaderContentControl">
                    <ContentPresenter dxg:GridColumnHeader.GridColumn="{Binding Path=(dxg:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
   <!--END Include: \Generic\DefaultGridViewStyles.xaml -->
    <!--START Include: \LightGray\LookUpEdit.xaml -->
    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v12.2;component/DevExpress.Xpf.Grid/Generic/LookUpEdit.xaml" />
    </ResourceDictionary.MergedDictionaries>-->

    <ControlTemplate x:Key="LookUpEditThemeKey_PopupTopAreaBackgroundPanelTemplate" TargetType="ContentControl">
        <Border BorderThickness="0">
            <ContentPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
        </Border>
    </ControlTemplate>
   <!--END Include: \LightGray\LookUpEdit.xaml -->
    <!--START Include: \Generic\LookUpEdit.xaml -->




    <ControlTemplate x:Key="LookUpEditThemeKey_PopupContentTemplate" TargetType="ContentControl">
        <dxg:GridControl x:Name="PART_GridControl" ShowBorder="False" />
    </ControlTemplate>


    <Style TargetType="dxgl:LookUpEdit" dx:ThemeManager.InheritedStyleSource="{StaticResource EditorsDictionary}">
        <Setter Property="ValidateOnTextInput" Value="false" />
        <Setter Property="AutoComplete" Value="true" />
        <Setter Property="IncrementalFiltering" Value="true" />
        <Setter Property="AllowRecreatePopupContent" Value="false" />
        <Setter Property="PopupContentTemplate" Value="{StaticResource LookUpEditThemeKey_PopupContentTemplate}" />
    </Style>
    <!--<Style x:Key="{dxgt:LookUpEditThemeKey ResourceKey=GridHeaderContentStyle}" TargetType="ContentPresenter">
        <Setter Property="TextElement.Foreground" Value="Red"/>
    </Style>-->
    <DataTemplate x:Key="LookUpEditThemeKey_GridHeaderContentStyle">
        <TextBlock Text="{Binding}" FontStyle="Oblique" />
    </DataTemplate>
   <!--END Include: \Generic\LookUpEdit.xaml -->
    <!--START Include: \Generic\TreeListIndentItems.xaml -->

   <!--END Include: \Generic\TreeListIndentItems.xaml -->
</ResourceDictionary>